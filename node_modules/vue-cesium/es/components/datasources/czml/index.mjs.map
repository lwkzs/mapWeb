{"version":3,"file":"index.mjs","sources":["../../../../../../packages/components/datasources/czml/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-08-27 23:08:53\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\datasources\\czml\\index.ts\n */\nimport type { PropType, VNode } from 'vue'\nimport { createCommentVNode, defineComponent, getCurrentInstance, h } from 'vue'\nimport type { VcComponentInternalInstance, VcComponentPublicInstance, VcDatasource, VcPickEvent, VcReadyObject } from '@vue-cesium/utils/types'\nimport { useDatasources } from '@vue-cesium/composables'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { hSlot } from '@vue-cesium/utils/private/render'\nimport { show, enableMouseEvent, sourceUri, credit } from '@vue-cesium/utils/cesium-props'\nimport { VcEntityProps } from '../../entity/src'\nimport { datasourceEmits } from '@vue-cesium/utils/emits'\n\nexport const czmlDatasourceProps = {\n  ...show,\n  ...enableMouseEvent,\n  entities: {\n    type: Array as PropType<Array<VcEntityProps>>,\n    default: () => []\n  },\n  czml: {\n    type: [String, Object, Array] as PropType<string | Cesium.Resource | Array<any>>,\n    required: true\n  },\n  ...sourceUri,\n  ...credit,\n  destroy: {\n    type: Boolean,\n    default: false\n  }\n}\nexport default defineComponent({\n  name: 'VcDatasourceCzml',\n  props: czmlDatasourceProps,\n  emits: datasourceEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'CzmlDataSource'\n    const datasourcesState = useDatasources(props, ctx, instance)\n\n    if (undefined === datasourcesState) {\n      return\n    }\n\n    instance.createCesiumObject = async () => {\n      const options = datasourcesState.transformProps(props)\n      return Cesium.CzmlDataSource.load(props.czml, options)\n    }\n\n    return () =>\n      ctx.slots.default\n        ? h(\n            'i',\n            {\n              class: kebabCase(instance.proxy?.$options.name || ''),\n              style: { display: 'none !important' }\n            },\n            hSlot(ctx.slots.default)\n          )\n        : createCommentVNode(kebabCase(instance.proxy?.$options.name || ''))\n  }\n})\n\nexport type VcDatasourceCzmlProps = {\n  /**\n   * Specify whether the data source is displayed.\n   * Default value: true\n   */\n  show?: boolean\n  /**\n   * Specify whether to respond to mouse pick events.\n   * Default value: true\n   */\n  enableMouseEvent?: boolean\n  /**\n   * Specify the collection of entities to be added to this data source.\n   */\n  entities?: Array<VcEntityProps>\n  /**\n   * A url or CZML object to be processed.\n   */\n  czml: string | Cesium.Resource | any[]\n  /**\n   * Overrides the url to use for resolving relative links.\n   */\n  sourceUri?: string | Cesium.Resource\n  /**\n   * A credit for the data source, which is displayed on the canvas.\n   */\n  credit?: string | Cesium.Credit\n  /**\n   * Whether to destroy the data source in addition to removing it.\n   * Default value: false\n   */\n  destroy?: boolean\n  /**\n   * Triggers before the VcDatasourceCzml is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcDatasourceCzml is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcDatasourceCzml is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the mouse is pressed on this datasource.\n   */\n  onMousedown?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse bounces up on this datasource.\n   */\n  onMouseup?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse clicks on this datasource.\n   */\n  onClick?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse clicks outside this datasource.\n   */\n  onClickout?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the left mouse button double-clicks this datasource.\n   */\n  onDblclick?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse moves on this datasource.\n   */\n  onMousemove?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse moves over to this datasource.\n   */\n  onMouseover?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse moves out of this datasource.\n   */\n  onMouseout?: (evt: VcPickEvent) => void\n  /**\n   * Triggers whenever a new property is assigned. datasource.clock.\n   */\n  onDefinitionChanged?: (property: Cesium.Property) => void\n  /**\n   *  Triggers when a new cluster will be displayed. datasource.clustering.\n   */\n  onClusterEvent?: (\n    entities: Array<Cesium.Entity>,\n    cluster: { billboard: Cesium.Billboard; label: Cesium.Label; point: Cesium.PointPrimitive }\n  ) => void\n  /**\n   * Triggers when entities are added or removed from the collection.datasource.entities\n   */\n  onCollectionChanged?: (\n    collection: Cesium.EntityCollection,\n    addedArray: Array<Cesium.Entity>,\n    removedArray: Array<Cesium.Entity>,\n    changedArray: Array<Cesium.Entity>\n  ) => void\n  /**\n   * Triggerswhen the underlying data changes.\n   */\n  onChangedEvent?: (datasource: VcDatasource) => void\n  /**\n   * Triggers if an error is encountered during processing.\n   */\n  onErrorEvent?: (datasource: VcDatasource, error: any) => void\n  /**\n   * Triggers when the data source either starts or stops loading.\n   */\n  onLoadingEvent?: (datasource: VcDatasource, isLoading: boolean) => void\n}\n\nexport type VcDatasourceCzmlRef = VcComponentPublicInstance<VcDatasourceCzmlProps>\n\nexport interface VcDatasourceCzmlSlots {\n  /**\n   * Slot for vc-entity.\n   */\n  default: () => VNode[]\n}\n"],"names":[],"mappings":";;;;;;;;;AAkBO,MAAM,mBAAsB,GAAA;AAAA,EACjC,GAAG,IAAA;AAAA,EACH,GAAG,gBAAA;AAAA,EACH,QAAU,EAAA;AAAA,IACR,IAAM,EAAA,KAAA;AAAA,IACN,OAAA,EAAS,MAAM,EAAC;AAAA,GAClB;AAAA,EACA,IAAM,EAAA;AAAA,IACJ,IAAM,EAAA,CAAC,MAAQ,EAAA,MAAA,EAAQ,KAAK,CAAA;AAAA,IAC5B,QAAU,EAAA,IAAA;AAAA,GACZ;AAAA,EACA,GAAG,SAAA;AAAA,EACH,GAAG,MAAA;AAAA,EACH,OAAS,EAAA;AAAA,IACP,IAAM,EAAA,OAAA;AAAA,IACN,OAAS,EAAA,KAAA;AAAA,GACX;AACF,EAAA;AACA,qBAAe,eAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,kBAAA;AAAA,EACN,KAAO,EAAA,mBAAA;AAAA,EACP,KAAO,EAAA,eAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAW,kBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,gBAAA,CAAA;AACvB,IAAA,MAAM,gBAAmB,GAAA,cAAA,CAAe,KAAO,EAAA,GAAA,EAAK,QAAQ,CAAA,CAAA;AAE5D,IAAA,IAAI,WAAc,gBAAkB,EAAA;AAClC,MAAA,OAAA;AAAA,KACF;AAEA,IAAA,QAAA,CAAS,qBAAqB,YAAY;AACxC,MAAM,MAAA,OAAA,GAAU,gBAAiB,CAAA,cAAA,CAAe,KAAK,CAAA,CAAA;AACrD,MAAA,OAAO,MAAO,CAAA,cAAA,CAAe,IAAK,CAAA,KAAA,CAAM,MAAM,OAAO,CAAA,CAAA;AAAA,KACvD,CAAA;AAEA,IAAA,OAAO,MAAG;AAvDd,MAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAwDM,MAAA,OAAA,GAAA,CAAI,MAAM,OACN,GAAA,CAAA;AAAA,QACE,GAAA;AAAA,QACA;AAAA,UACE,OAAO,SAAU,CAAA,CAAA,CAAA,EAAA,GAAA,QAAA,CAAS,UAAT,IAAgB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAA,CAAS,SAAQ,EAAE,CAAA;AAAA,UACpD,KAAA,EAAO,EAAE,OAAA,EAAS,iBAAkB,EAAA;AAAA,SACtC;AAAA,QACA,KAAA,CAAM,GAAI,CAAA,KAAA,CAAM,OAAO,CAAA;AAAA,OACzB,GACA,mBAAmB,SAAU,CAAA,CAAA,CAAA,EAAA,GAAA,QAAA,CAAS,UAAT,IAAgB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAA,CAAS,IAAQ,KAAA,EAAE,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GACzE;AACF,CAAC,CAAA;;;;"}