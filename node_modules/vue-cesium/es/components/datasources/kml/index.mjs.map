{"version":3,"file":"index.mjs","sources":["../../../../../../packages/components/datasources/kml/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-04-06 15:00:47\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\datasources\\kml\\index.ts\n */\nimport type { PropType, VNode } from 'vue'\nimport { createCommentVNode, defineComponent, getCurrentInstance, h } from 'vue'\nimport type { VcComponentInternalInstance, VcComponentPublicInstance, VcDatasource, VcPickEvent, VcReadyObject } from '@vue-cesium/utils/types'\nimport { useDatasources, useVueCesium } from '@vue-cesium/composables'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { hSlot } from '@vue-cesium/utils/private/render'\nimport { show, enableMouseEvent, data, sourceUri, clampToGround, ellipsoid, credit } from '@vue-cesium/utils/cesium-props'\nimport { datasourceEmits } from '@vue-cesium/utils/emits'\nimport { VcEntityProps } from '../../entity/src'\n\nexport const kmlDatasourceProps = {\n  ...show,\n  ...enableMouseEvent,\n  entities: {\n    type: Array as PropType<Array<VcEntityProps>>,\n    default: () => []\n  },\n  ...data,\n  camera: Object as PropType<Cesium.Camera>,\n  canvas: HTMLCanvasElement,\n  ...sourceUri,\n  ...clampToGround,\n  ...ellipsoid,\n  ...credit,\n  destroy: {\n    type: Boolean,\n    default: false\n  },\n  screenOverlayContainer: [Element, String]\n}\nexport default defineComponent({\n  name: 'VcDatasourceKml',\n  props: kmlDatasourceProps,\n  emits: datasourceEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'KmlDataSource'\n    const datasourcesState = useDatasources(props, ctx, instance)\n    const vc = useVueCesium()\n\n    instance.createCesiumObject = async () => {\n      const options: any = datasourcesState?.transformProps(props)\n      if (!options.camera) {\n        options.camera = vc?.viewer.camera\n      }\n      if (!options.canvas) {\n        options.canvas = vc?.viewer.canvas\n      }\n      return Cesium.KmlDataSource.load(props.data || '', options)\n    }\n\n    return () =>\n      ctx.slots.default\n        ? h(\n            'i',\n            {\n              class: kebabCase(instance.proxy?.$options.name || ''),\n              style: { display: 'none !important' }\n            },\n            hSlot(ctx.slots.default)\n          )\n        : createCommentVNode(kebabCase(instance.proxy?.$options.name || ''))\n  }\n})\n\nexport type VcDatasourceKmlProps = {\n  /**\n   * Specify whether the data source is displayed.\n   * Default value: true\n   */\n  show?: boolean\n  /**\n   * Specify whether to respond to mouse pick events.\n   * Default value: true\n   */\n  enableMouseEvent?: boolean\n  /**\n   * Specify the collection of entities to be added to this data source.\n   */\n  entities?: Array<VcEntityProps>\n  /**\n   * A url, parsed KML document, or Blob containing binary KMZ data or a parsed KML document.\n   */\n  data?: string | Cesium.Resource | Blob\n  /**\n   * The camera that is used for viewRefreshModes and sending camera properties to network links.\n   */\n  camera?: Cesium.Camera\n  /**\n   * \tThe canvas that is used for sending viewer properties to network links.\n   */\n  canvas?: HTMLCanvasElement\n  /**\n   * Overrides the url to use for resolving relative links and other KML network features.\n   */\n  sourceUri?: string | Cesium.Resource\n  /**\n   * true if we want the geometry features (Polygons, LineStrings and LinearRings) clamped to the ground.\n   * Default value: false\n   */\n  clampToGround?: boolean\n  /**\n   * The global ellipsoid used for geographical calculations.\n   */\n  ellipsoid?: Cesium.Ellipsoid\n  /**\n   * A credit for the data source, which is displayed on the canvas.\n   */\n  credit?: string | Cesium.Credit\n  screenOverlayContainer?: Element | string\n  /**\n   * Whether to destroy the data source in addition to removing it.\n   * Default value: false\n   */\n  destroy?: boolean\n  /**\n   * Triggers before the VcDatasourceKml is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcDatasourceKml is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcDatasourceKml is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the mouse is pressed on this datasource.\n   */\n  onMousedown?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse bounces up on this datasource.\n   */\n  onMouseup?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse clicks on this datasource.\n   */\n  onClick?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse clicks outside this datasource.\n   */\n  onClickout?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the left mouse button double-clicks this datasource.\n   */\n  onDblclick?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse moves on this datasource.\n   */\n  onMousemove?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse moves over to this datasource.\n   */\n  onMouseover?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse moves out of this datasource.\n   */\n  onMouseout?: (evt: VcPickEvent) => void\n  /**\n   * Triggers whenever a new property is assigned. datasource.clock.\n   */\n  onDefinitionChanged?: (property: Cesium.Property) => void\n  /**\n   *  Triggers when a new cluster will be displayed. datasource.clustering.\n   */\n  onClusterEvent?: (\n    entities: Array<Cesium.Entity>,\n    cluster: { billboard: Cesium.Billboard; label: Cesium.Label; point: Cesium.PointPrimitive }\n  ) => void\n  /**\n   * Triggers when entities are added or removed from the collection.datasource.entities\n   */\n  onCollectionChanged?: (\n    collection: Cesium.EntityCollection,\n    addedArray: Array<Cesium.Entity>,\n    removedArray: Array<Cesium.Entity>,\n    changedArray: Array<Cesium.Entity>\n  ) => void\n  /**\n   * Triggerswhen the underlying data changes.\n   */\n  onChangedEvent?: (datasource: VcDatasource) => void\n  /**\n   * Triggers if an error is encountered during processing.\n   */\n  onErrorEvent?: (datasource: VcDatasource, error: any) => void\n  /**\n   * Triggers when the data source either starts or stops loading.\n   */\n  onLoadingEvent?: (datasource: VcDatasource, isLoading: boolean) => void\n  /**\n   * Triggers when the data source refreshes a network link.\n   */\n  onRefreshEvent?: (datasource: Cesium.KmlDataSource, url: string) => void\n  /**\n   * Triggers when the data source finds an unsupported node type.\n   */\n  onUnsupportedNodeEvent?: (\n    datasource: Cesium.KmlDataSource,\n    parentEntity: any,\n    node: any,\n    entityCollection: any,\n    styleCollection: any,\n    sourceResource: any,\n    uriResolver: any\n  ) => void\n}\n\nexport type VcDatasourceKmlRef = VcComponentPublicInstance<VcDatasourceKmlProps>\n\nexport interface VcDatasourceKmlSlots {\n  /**\n   * Slot for vc-entity.\n   */\n  default: () => VNode[]\n}\n"],"names":[],"mappings":";;;;;;;;;;AAkBO,MAAM,kBAAqB,GAAA;AAAA,EAChC,GAAG,IAAA;AAAA,EACH,GAAG,gBAAA;AAAA,EACH,QAAU,EAAA;AAAA,IACR,IAAM,EAAA,KAAA;AAAA,IACN,OAAA,EAAS,MAAM,EAAC;AAAA,GAClB;AAAA,EACA,GAAG,IAAA;AAAA,EACH,MAAQ,EAAA,MAAA;AAAA,EACR,MAAQ,EAAA,iBAAA;AAAA,EACR,GAAG,SAAA;AAAA,EACH,GAAG,aAAA;AAAA,EACH,GAAG,SAAA;AAAA,EACH,GAAG,MAAA;AAAA,EACH,OAAS,EAAA;AAAA,IACP,IAAM,EAAA,OAAA;AAAA,IACN,OAAS,EAAA,KAAA;AAAA,GACX;AAAA,EACA,sBAAA,EAAwB,CAAC,OAAA,EAAS,MAAM,CAAA;AAC1C,EAAA;AACA,oBAAe,eAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,iBAAA;AAAA,EACN,KAAO,EAAA,kBAAA;AAAA,EACP,KAAO,EAAA,eAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAW,kBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,eAAA,CAAA;AACvB,IAAA,MAAM,gBAAmB,GAAA,cAAA,CAAe,KAAO,EAAA,GAAA,EAAK,QAAQ,CAAA,CAAA;AAC5D,IAAA,MAAM,KAAK,YAAa,EAAA,CAAA;AAExB,IAAA,QAAA,CAAS,qBAAqB,YAAY;AACxC,MAAM,MAAA,OAAA,GAAe,qDAAkB,cAAe,CAAA,KAAA,CAAA,CAAA;AACtD,MAAI,IAAA,CAAC,QAAQ,MAAQ,EAAA;AACnB,QAAQ,OAAA,CAAA,MAAA,GAAS,yBAAI,MAAO,CAAA,MAAA,CAAA;AAAA,OAC9B;AACA,MAAI,IAAA,CAAC,QAAQ,MAAQ,EAAA;AACnB,QAAQ,OAAA,CAAA,MAAA,GAAS,yBAAI,MAAO,CAAA,MAAA,CAAA;AAAA,OAC9B;AACA,MAAA,OAAO,OAAO,aAAc,CAAA,IAAA,CAAK,KAAM,CAAA,IAAA,IAAQ,IAAI,OAAO,CAAA,CAAA;AAAA,KAC5D,CAAA;AAEA,IAAA,OAAO,MAAG;AA5Dd,MAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AA6DM,MAAA,OAAA,GAAA,CAAI,MAAM,OACN,GAAA,CAAA;AAAA,QACE,GAAA;AAAA,QACA;AAAA,UACE,OAAO,SAAU,CAAA,CAAA,CAAA,EAAA,GAAA,QAAA,CAAS,UAAT,IAAgB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAA,CAAS,SAAQ,EAAE,CAAA;AAAA,UACpD,KAAA,EAAO,EAAE,OAAA,EAAS,iBAAkB,EAAA;AAAA,SACtC;AAAA,QACA,KAAA,CAAM,GAAI,CAAA,KAAA,CAAM,OAAO,CAAA;AAAA,OACzB,GACA,mBAAmB,SAAU,CAAA,CAAA,CAAA,EAAA,GAAA,QAAA,CAAS,UAAT,IAAgB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAA,CAAS,IAAQ,KAAA,EAAE,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GACzE;AACF,CAAC,CAAA;;;;"}