{"version":3,"file":"index.mjs","sources":["../../../../../../packages/components/geometries/ellipsoid-outline/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-03-30 10:41:39\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\geometries\\ellipsoid-outline\\index.ts\n */\nimport { VcComponentInternalInstance, VcComponentPublicInstance, VcPosition, VcReadyObject } from '@vue-cesium/utils/types'\nimport { defineComponent, getCurrentInstance, createCommentVNode } from 'vue'\nimport type { ExtractPropTypes } from 'vue'\nimport { useGeometries } from '@vue-cesium/composables'\nimport { kebabCase } from '@vue-cesium/utils/util'\n\nimport {\n  radii,\n  innerRadii,\n  minimumClock,\n  maximumClock,\n  minimumCone,\n  maximumCone,\n  stackPartitions,\n  slicePartitions,\n  subdivisions\n} from '@vue-cesium/utils/cesium-props'\nimport { commonEmits } from '@vue-cesium/utils/emits'\nconst ellipsoidOutlineProps = {\n  ...radii,\n  ...innerRadii,\n  ...minimumClock,\n  ...maximumClock,\n  ...minimumCone,\n  ...maximumCone,\n  ...stackPartitions,\n  ...slicePartitions,\n  ...subdivisions\n}\nexport default defineComponent({\n  name: 'VcGeometryEllipsoidOutline',\n  props: ellipsoidOutlineProps,\n  emits: commonEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'EllipsoidOutlineGeometry'\n    useGeometries(props, ctx, instance)\n\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || 'v-if'))\n  }\n})\n\nexport type VcGeometryEllipsoidOutlineProps = {\n  /**\n   * The radii of the ellipsoid in the x, y, and z directions.\n   */\n  radii?: VcPosition\n  /**\n   * The inner radii of the ellipsoid in the x, y, and z directions.\n   */\n  innerRadii?: VcPosition\n  /**\n   * The minimum angle lying in the xy-plane measured from the positive x-axis and toward the positive y-axis.\n   * Default value: 0.0\n   */\n  minimumClock?: number\n  /**\n   * The maximum angle lying in the xy-plane measured from the positive x-axis and toward the positive y-axis.\n   * Default value: 2*PI\n   */\n  maximumClock?: number\n  /**\n   * The minimum angle measured from the positive z-axis and toward the negative z-axis.\n   * Default value: 0.0\n   */\n  minimumCone?: number\n  /**\n   * The maximum angle measured from the positive z-axis and toward the negative z-axis.\n   * Default value: PI\n   */\n  maximumCone?: number\n  /**\n   * The number of times to partition the ellipsoid into stacks.\n   * Default value: 64\n   */\n  stackPartitions?: number\n  /**\n   * The number of times to partition the ellipsoid into radial slices.\n   * Default value: 64\n   */\n  slicePartitions?: number\n  /**\n   * The number of points per line, determining the granularity of the curvature.\n   * Default value: 128\n   */\n  subdivisions?: number\n  /**\n   * Triggers before the VcGeometryEllipsoidOutline is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcGeometryEllipsoidOutline is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcGeometryEllipsoidOutline is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n}\n\nexport type VcGeometryEllipsoidOutlineRef = VcComponentPublicInstance<VcGeometryEllipsoidOutlineProps>\n"],"names":[],"mappings":";;;;;;;;AA0BA,MAAM,qBAAwB,GAAA;AAAA,EAC5B,GAAG,KAAA;AAAA,EACH,GAAG,UAAA;AAAA,EACH,GAAG,YAAA;AAAA,EACH,GAAG,YAAA;AAAA,EACH,GAAG,WAAA;AAAA,EACH,GAAG,WAAA;AAAA,EACH,GAAG,eAAA;AAAA,EACH,GAAG,eAAA;AAAA,EACH,GAAG,YAAA;AACL,CAAA,CAAA;AACA,+BAAe,eAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,4BAAA;AAAA,EACN,KAAO,EAAA,qBAAA;AAAA,EACP,KAAO,EAAA,WAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAW,kBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,0BAAA,CAAA;AACvB,IAAc,aAAA,CAAA,KAAA,EAAO,KAAK,QAAQ,CAAA,CAAA;AAElC,IAAA,OAAO,MAAG;AA/Cd,MAAA,IAAA,EAAA,CAAA;AA+CiB,MAAA,OAAA,kBAAA,CAAmB,YAAU,EAAS,GAAA,QAAA,CAAA,KAAA,KAAT,mBAAgB,QAAS,CAAA,IAAA,KAAQ,MAAM,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GACpF;AACF,CAAC,CAAA;;;;"}