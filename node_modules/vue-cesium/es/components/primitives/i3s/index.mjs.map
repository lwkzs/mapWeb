{"version":3,"file":"index.mjs","sources":["../../../../../../packages/components/primitives/i3s/index.ts"],"sourcesContent":["import { createCommentVNode, defineComponent, getCurrentInstance, PropType } from 'vue'\nimport type { VcComponentInternalInstance, VcComponentPublicInstance, VcPickEvent, VcReadyObject } from '@vue-cesium/utils/types'\nimport { usePrimitives } from '@vue-cesium/composables'\nimport { url, show, enableMouseEvent } from '@vue-cesium/utils/cesium-props'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { primitiveEmits } from '@vue-cesium/utils/emits'\nimport { VcPrimitiveTilesetProps } from '../tileset'\n\nexport const i3sDataProviderProps = {\n  ...url,\n  name: String,\n  ...show,\n  geoidTiledTerrainProvider: {\n    type: Object as PropType<Cesium.ArcGISTiledElevationTerrainProvider | Promise<Cesium.ArcGISTiledElevationTerrainProvider>>\n  },\n  traceFetches: {\n    type: Boolean,\n    default: false\n  },\n  cesium3dTilesetOptions: {\n    type: Object as PropType<VcPrimitiveTilesetProps>\n  },\n  ...enableMouseEvent\n}\nexport default defineComponent({\n  name: 'VcPrimitiveI3sDataProvider',\n  props: i3sDataProviderProps,\n  emits: primitiveEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'I3SDataProvider'\n    usePrimitives(props, ctx, instance)\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || ''))\n  }\n})\n\nexport type VcPrimitiveI3sDataProviderProps = {\n  /**\n   * The url of the I3S dataset.\n   */\n  url?: string | Cesium.Resource\n  /**\n   * The name of the I3S dataset.\n   */\n  name?: string\n  /**\n   * Determines if the dataset will be shown.\n   * Default value: true\n   */\n  show?: boolean\n  /**\n   * Tiled elevation provider describing an Earth Gravitational Model. If defined, geometry will be shifted based on the offsets given by this provider. Required to position I3S data sets with gravity-related height at the correct location.\n   */\n  geoidTiledTerrainProvider?: Cesium.ArcGISTiledElevationTerrainProvider | Promise<Cesium.ArcGISTiledElevationTerrainProvider>\n  /**\n   * Debug option. When true, log a message whenever an I3S tile is fetched.\n   * Default value: false\n   */\n  traceFetches?: boolean\n  /**\n   * Object containing options to pass to an internally created Cesium3DTileset.\n   * Default value: 256\n   */\n  cesium3dTilesetOptions?: VcPrimitiveTilesetProps\n  /**\n   * Specifies whether to respond to mouse pick events.\n   * Default Value: true\n   */\n  enableMouseEvent?: boolean\n  /**\n   * Triggers before the component is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the component is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the component is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the mouse is pressed on this primitive.\n   */\n  onMousedown?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse bounces up on this primitive.\n   */\n  onMouseup?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse clicks on this primitive.\n   */\n  onClick?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse clicks outside this primitive.\n   */\n  onClickout?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the left mouse button double-clicks this primitive.\n   */\n  onDblclick?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse moves on this primitive.\n   */\n  onMousemove?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse moves over to this primitive.\n   */\n  onMouseover?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the mouse moves out of this primitive.\n   */\n  onMouseout?: (evt: VcPickEvent) => void\n  /**\n   * Triggers when the primitive is ready to render.\n   */\n  onReadyPromise?: (primitive: Cesium.Primitive, viewer: Cesium.Viewer, instance: VcComponentPublicInstance) => void\n}\n\nexport type VcPrimitiveI3sDataProviderRef = VcComponentPublicInstance<VcPrimitiveI3sDataProviderProps>\n"],"names":[],"mappings":";;;;;;;;AAQO,MAAM,oBAAuB,GAAA;AAAA,EAClC,GAAG,GAAA;AAAA,EACH,IAAM,EAAA,MAAA;AAAA,EACN,GAAG,IAAA;AAAA,EACH,yBAA2B,EAAA;AAAA,IACzB,IAAM,EAAA,MAAA;AAAA,GACR;AAAA,EACA,YAAc,EAAA;AAAA,IACZ,IAAM,EAAA,OAAA;AAAA,IACN,OAAS,EAAA,KAAA;AAAA,GACX;AAAA,EACA,sBAAwB,EAAA;AAAA,IACtB,IAAM,EAAA,MAAA;AAAA,GACR;AAAA,EACA,GAAG,gBAAA;AACL,EAAA;AACA,+BAAe,eAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,4BAAA;AAAA,EACN,KAAO,EAAA,oBAAA;AAAA,EACP,KAAO,EAAA,cAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAW,kBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,iBAAA,CAAA;AACvB,IAAc,aAAA,CAAA,KAAA,EAAO,KAAK,QAAQ,CAAA,CAAA;AAClC,IAAA,OAAO,MAAG;AAjCd,MAAA,IAAA,EAAA,CAAA;AAiCiB,MAAA,OAAA,kBAAA,CAAmB,YAAU,EAAS,GAAA,QAAA,CAAA,KAAA,KAAT,mBAAgB,QAAS,CAAA,IAAA,KAAQ,EAAE,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GAChF;AACF,CAAC,CAAA;;;;"}