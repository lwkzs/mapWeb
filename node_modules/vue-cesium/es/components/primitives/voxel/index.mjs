import { defineComponent, getCurrentInstance, createCommentVNode } from 'vue';
import '../../../composables/index.mjs';
import { modelMatrix, customShader, clock, enableMouseEvent } from '../../../utils/cesium-props.mjs';
import { kebabCase } from '../../../utils/util.mjs';
import { primitiveEmits } from '../../../utils/emits.mjs';
import usePrimitives from '../../../composables/use-primitives/index.mjs';

"use strict";
const voxelPromitiveProps = {
  provider: {
    type: Object
  },
  ...modelMatrix,
  ...customShader,
  ...clock,
  ...enableMouseEvent
};
var PrimitiveVoxel = defineComponent({
  name: "VcPrimitiveVoxel",
  props: voxelPromitiveProps,
  emits: primitiveEmits,
  setup(props, ctx) {
    const instance = getCurrentInstance();
    instance.cesiumClass = "VoxelPrimitive";
    usePrimitives(props, ctx, instance);
    return () => {
      var _a;
      return createCommentVNode(kebabCase(((_a = instance.proxy) == null ? void 0 : _a.$options.name) || ""));
    };
  }
});

export { PrimitiveVoxel as default, voxelPromitiveProps };
//# sourceMappingURL=index.mjs.map
