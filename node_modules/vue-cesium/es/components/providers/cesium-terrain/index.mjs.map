{"version":3,"file":"index.mjs","sources":["../../../../../../packages/components/providers/cesium-terrain/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2023-07-28 00:40:54\n * @LastEditors: zouyaoji 370681295@qq.com\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\providers\\cesium-terrain\\index.ts\n */\nimport { createCommentVNode, defineComponent, getCurrentInstance } from 'vue'\nimport type { PropType } from 'vue'\nimport type { VcComponentInternalInstance, VcComponentPublicInstance, VcReadyObject } from '@vue-cesium/utils/types'\nimport { useProviders } from '@vue-cesium/composables'\nimport { ellipsoid, credit } from '@vue-cesium/utils/cesium-props'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { providerEmits } from '@vue-cesium/utils/emits'\n\nexport const cesiumTerrainProviderProps = {\n  url: [String, Object] as PropType<string | Promise<string> | Promise<Cesium.Resource> | Cesium.Resource>,\n  requestVertexNormals: {\n    type: Boolean,\n    default: false\n  },\n  requestWaterMask: {\n    type: Boolean,\n    default: false\n  },\n  requestMetadata: {\n    type: Boolean,\n    default: true\n  },\n  assetId: Number,\n  ...ellipsoid,\n  ...credit\n}\n\nexport default defineComponent({\n  name: 'VcTerrainProviderCesium',\n  props: cesiumTerrainProviderProps,\n  emits: providerEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'CesiumTerrainProvider'\n    const providersState = useProviders(props, ctx, instance)\n\n    if (undefined === providersState) {\n      return\n    }\n    // methods\n    instance.createCesiumObject = async () => {\n      if (providersState.unwatchFns.length === 0) {\n        providersState.setPropsWatcher(true)\n      }\n      const options = providersState.transformProps(props)\n\n      if (Cesium.defined(props.assetId) && typeof Cesium[instance.cesiumClass].fromIonAssetId === 'function') {\n        return await Cesium.CesiumTerrainProvider.fromIonAssetId(props.assetId, options)\n      } else {\n        if (typeof Cesium[instance.cesiumClass].fromUrl === 'function') {\n          return Cesium.defined(options.url)\n            ? await Cesium.CesiumTerrainProvider.fromUrl(options.url, options)\n            : await Cesium.createWorldTerrainAsync({ requestVertexNormals: options.requestVertexNormals, requestWaterMask: options.requestWaterMask })\n        } else {\n          return Cesium.defined(options.url)\n            ? new Cesium.CesiumTerrainProvider(options as any)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            : Cesium.createWorldTerrain({ requestVertexNormals: options.requestVertexNormals, requestWaterMask: options.requestWaterMask })\n        }\n      }\n    }\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || ''))\n  }\n})\n\nexport type VcTerrainProviderCesiumProps = {\n  /**\n   * The URL of the Cesium terrain server.\n   */\n  url?: string\n  /**\n   * Flag that indicates if the client should request additional lighting information from the server, in the form of per vertex normals if available.\n   * Default value: false\n   */\n  requestVertexNormals?: boolean\n  /**\n   * Flag that indicates if the client should request per tile water masks from the server, if available.\n   * Default value: false\n   */\n  requestWaterMask?: boolean\n  /**\n   * Flag that indicates if the client should request per tile metadata from the server, if available.\n   * Default value: true\n   */\n  requestMetadata?: boolean\n  /**\n   * The ellipsoid. If not specified, the WGS84 ellipsoid is used.\n   */\n  ellipsoid?: Cesium.Ellipsoid\n  /**\n   * A credit for the data source, which is displayed on the canvas.\n   */\n  credit?: string\n  /**\n   * The assetId to a terrain from a Cesium ion asset ID.\n   */\n  assetId?: number\n  /**\n   * Triggers before the VcTerrainProviderCesium is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcTerrainProviderCesium is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcTerrainProviderCesium is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the terrain provider encounters an asynchronous error.\n   */\n  onErrorEvent?: (evt: Cesium.TileProviderError) => void\n  /**\n   * Triggers when the provider is ready for use.\n   */\n  onReadyPromise?: (evt: boolean, viewer: Cesium.Viewer, instance: VcComponentPublicInstance) => void\n}\n\nexport type VcTerrainProviderCesiumRef = VcComponentPublicInstance<VcTerrainProviderCesiumProps>\n"],"names":[],"mappings":";;;;;;;;AAgBO,MAAM,0BAA6B,GAAA;AAAA,EACxC,GAAA,EAAK,CAAC,MAAA,EAAQ,MAAM,CAAA;AAAA,EACpB,oBAAsB,EAAA;AAAA,IACpB,IAAM,EAAA,OAAA;AAAA,IACN,OAAS,EAAA,KAAA;AAAA,GACX;AAAA,EACA,gBAAkB,EAAA;AAAA,IAChB,IAAM,EAAA,OAAA;AAAA,IACN,OAAS,EAAA,KAAA;AAAA,GACX;AAAA,EACA,eAAiB,EAAA;AAAA,IACf,IAAM,EAAA,OAAA;AAAA,IACN,OAAS,EAAA,IAAA;AAAA,GACX;AAAA,EACA,OAAS,EAAA,MAAA;AAAA,EACT,GAAG,SAAA;AAAA,EACH,GAAG,MAAA;AACL,EAAA;AAEA,4BAAe,eAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,yBAAA;AAAA,EACN,KAAO,EAAA,0BAAA;AAAA,EACP,KAAO,EAAA,aAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAW,kBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,uBAAA,CAAA;AACvB,IAAA,MAAM,cAAiB,GAAA,YAAA,CAAa,KAAO,EAAA,GAAA,EAAK,QAAQ,CAAA,CAAA;AAExD,IAAA,IAAI,WAAc,cAAgB,EAAA;AAChC,MAAA,OAAA;AAAA,KACF;AAEA,IAAA,QAAA,CAAS,qBAAqB,YAAY;AACxC,MAAI,IAAA,cAAA,CAAe,UAAW,CAAA,MAAA,KAAW,CAAG,EAAA;AAC1C,QAAA,cAAA,CAAe,gBAAgB,IAAI,CAAA,CAAA;AAAA,OACrC;AACA,MAAM,MAAA,OAAA,GAAU,cAAe,CAAA,cAAA,CAAe,KAAK,CAAA,CAAA;AAEnD,MAAI,IAAA,MAAA,CAAO,OAAQ,CAAA,KAAA,CAAM,OAAO,CAAA,IAAK,OAAO,MAAA,CAAO,QAAS,CAAA,WAAW,CAAE,CAAA,cAAA,KAAmB,UAAY,EAAA;AACtG,QAAA,OAAO,MAAM,MAAO,CAAA,qBAAA,CAAsB,cAAe,CAAA,KAAA,CAAM,SAAS,OAAO,CAAA,CAAA;AAAA,OAC1E,MAAA;AACL,QAAA,IAAI,OAAO,MAAO,CAAA,QAAA,CAAS,WAAW,CAAA,CAAE,YAAY,UAAY,EAAA;AAC9D,UAAO,OAAA,MAAA,CAAO,QAAQ,OAAQ,CAAA,GAAG,IAC7B,MAAM,MAAA,CAAO,qBAAsB,CAAA,OAAA,CAAQ,OAAQ,CAAA,GAAA,EAAK,OAAO,CAC/D,GAAA,MAAM,MAAO,CAAA,uBAAA,CAAwB,EAAE,oBAAA,EAAsB,QAAQ,oBAAsB,EAAA,gBAAA,EAAkB,OAAQ,CAAA,gBAAA,EAAkB,CAAA,CAAA;AAAA,SACtI,MAAA;AACL,UAAA,OAAO,OAAO,OAAQ,CAAA,OAAA,CAAQ,GAAG,CAC7B,GAAA,IAAI,OAAO,qBAAsB,CAAA,OAAc,IAG/C,MAAO,CAAA,kBAAA,CAAmB,EAAE,oBAAsB,EAAA,OAAA,CAAQ,sBAAsB,gBAAkB,EAAA,OAAA,CAAQ,kBAAkB,CAAA,CAAA;AAAA,SAClI;AAAA,OACF;AAAA,KACF,CAAA;AACA,IAAA,OAAO,MAAG;AAvEd,MAAA,IAAA,EAAA,CAAA;AAuEiB,MAAA,OAAA,kBAAA,CAAmB,YAAU,EAAS,GAAA,QAAA,CAAA,KAAA,KAAT,mBAAgB,QAAS,CAAA,IAAA,KAAQ,EAAE,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GAChF;AACF,CAAC,CAAA;;;;"}