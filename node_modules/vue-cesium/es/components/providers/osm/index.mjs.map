{"version":3,"file":"index.mjs","sources":["../../../../../../packages/components/providers/osm/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-04-08 13:43:58\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\providers\\osm\\index.ts\n */\nimport type { PropType } from 'vue'\nimport { createCommentVNode, defineComponent, getCurrentInstance } from 'vue'\nimport type { VcComponentInternalInstance, VcComponentPublicInstance, VcReadyObject, VcRectangle } from '@vue-cesium/utils/types'\nimport { useProviders } from '@vue-cesium/composables'\nimport { fileExtension, rectangle, minimumLevel, maximumLevel, ellipsoid } from '@vue-cesium/utils/cesium-props'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { providerEmits } from '@vue-cesium/utils/emits'\n\nexport const osmImageryProviderProps = {\n  url: {\n    type: String,\n    default: 'https://a.tile.openstreetmap.org'\n  },\n  ...fileExtension,\n  ...rectangle,\n  ...minimumLevel,\n  ...maximumLevel,\n  ...ellipsoid,\n  credit: {\n    type: [String, Object] as PropType<string | Cesium.Credit>,\n    default: 'MapQuest, Open Street Map and contributors, CC-BY-SA'\n  }\n}\nexport default defineComponent({\n  name: 'VcImageryProviderOsm',\n  props: osmImageryProviderProps,\n  emits: providerEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'OpenStreetMapImageryProvider'\n    useProviders(props, ctx, instance)\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || ''))\n  }\n})\n\nexport type VcImageryProviderOsmProps = {\n  /**\n   * The OpenStreetMap server url.\n   * Default value: 'https://a.tile.openstreetmap.org'\n   */\n  url?: string\n  /**\n   * The file extension for images on the server.\n   * Default value: 'png'\n   */\n  fileExtension?: string\n  /**\n   * The rectangle of the layer.\n   */\n  rectangle?: VcRectangle\n  /**\n   * The minimum level-of-detail supported by the imagery provider.\n   * Default value: 0\n   */\n  minimumLevel?: number\n  /**\n   * The maximum level-of-detail supported by the imagery provider, or undefined if there is no limit.\n   */\n  maximumLevel?: number\n  /**\n   * The ellipsoid. If not specified, the WGS84 ellipsoid is used.\n   */\n  ellipsoid?: Cesium.Ellipsoid\n  /**\n   * A credit for the data source, which is displayed on the canvas.\n   * Default value: 'MapQuest, Open Street Map and contributors, CC-BY-SA'\n   */\n  credit?: string | Cesium.Credit\n  /**\n   * Triggers before the VcImageryProviderOsm is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcImageryProviderOsm is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcImageryProviderOsm is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the imagery provider encounters an asynchronous error.\n   */\n  onErrorEvent?: (evt: Cesium.TileProviderError) => void\n  /**\n   * Triggers when the provider is ready for use.\n   */\n  onReadyPromise?: (evt: boolean, viewer: Cesium.Viewer, instance: VcComponentPublicInstance) => void\n}\n\nexport type VcImageryProviderOsmRef = VcComponentPublicInstance<VcImageryProviderOsmProps>\n"],"names":[],"mappings":";;;;;;;;AAgBO,MAAM,uBAA0B,GAAA;AAAA,EACrC,GAAK,EAAA;AAAA,IACH,IAAM,EAAA,MAAA;AAAA,IACN,OAAS,EAAA,kCAAA;AAAA,GACX;AAAA,EACA,GAAG,aAAA;AAAA,EACH,GAAG,SAAA;AAAA,EACH,GAAG,YAAA;AAAA,EACH,GAAG,YAAA;AAAA,EACH,GAAG,SAAA;AAAA,EACH,MAAQ,EAAA;AAAA,IACN,IAAA,EAAM,CAAC,MAAA,EAAQ,MAAM,CAAA;AAAA,IACrB,OAAS,EAAA,sDAAA;AAAA,GACX;AACF,EAAA;AACA,yBAAe,eAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,sBAAA;AAAA,EACN,KAAO,EAAA,uBAAA;AAAA,EACP,KAAO,EAAA,aAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAW,kBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,8BAAA,CAAA;AACvB,IAAa,YAAA,CAAA,KAAA,EAAO,KAAK,QAAQ,CAAA,CAAA;AACjC,IAAA,OAAO,MAAG;AAxCd,MAAA,IAAA,EAAA,CAAA;AAwCiB,MAAA,OAAA,kBAAA,CAAmB,YAAU,EAAS,GAAA,QAAA,CAAA,KAAA,KAAT,mBAAgB,QAAS,CAAA,IAAA,KAAQ,EAAE,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GAChF;AACF,CAAC,CAAA;;;;"}