{"version":3,"file":"objects.mjs","sources":["../../../../packages/utils/objects.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2022-08-03 13:30:02\n * @LastEditTime: 2023-04-15 16:27:26\n * @LastEditors: zouyaoji 370681295@qq.com\n * @Description:\n * @FilePath: \\vue-cesium\\packages\\utils\\objects.ts\n */\nimport { get, set } from 'lodash-unified'\nimport type { Entries } from 'type-fest'\nimport { Arrayable } from './types'\n\nexport const keysOf = <T>(arr: T) => Object.keys(arr) as Array<keyof T>\nexport const entriesOf = <T>(arr: T) => Object.entries(arr) as Entries<T>\nexport { hasOwn } from './util'\n\nexport const getProp = <T = any>(obj: Record<string, any>, path: Arrayable<string>, defaultValue?: any): { value: T } => {\n  return {\n    get value() {\n      return get(obj, path, defaultValue)\n    },\n    set value(val: any) {\n      set(obj, path, val)\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAYO,MAAM,MAAS,GAAA,CAAI,GAAW,KAAA,MAAA,CAAO,KAAK,GAAG,EAAA;AAC7C,MAAM,SAAY,GAAA,CAAI,GAAW,KAAA,MAAA,CAAO,QAAQ,GAAG,EAAA;AAGnD,MAAM,OAAU,GAAA,CAAU,GAA0B,EAAA,IAAA,EAAyB,YAAqC,KAAA;AACvH,EAAO,OAAA;AAAA,IACL,IAAI,KAAQ,GAAA;AACV,MAAO,OAAA,GAAA,CAAI,GAAK,EAAA,IAAA,EAAM,YAAY,CAAA,CAAA;AAAA,KACpC;AAAA,IACA,IAAI,MAAM,GAAU,EAAA;AAClB,MAAI,GAAA,CAAA,GAAA,EAAK,MAAM,GAAG,CAAA,CAAA;AAAA,KACpB;AAAA,GACF,CAAA;AACF;;;;"}