{"version":3,"file":"index.js","sources":["../../../../../../packages/components/geometries/circle-outline/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-03-30 10:32:22\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\geometries\\circle-outline\\index.ts\n */\nimport { VcComponentInternalInstance, VcComponentPublicInstance, VcPosition, VcReadyObject } from '@vue-cesium/utils/types'\nimport { defineComponent, getCurrentInstance, createCommentVNode } from 'vue'\nimport { useGeometries } from '@vue-cesium/composables'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { center, radius, ellipsoid, height, granularity, extrudedHeight, numberOfVerticalLines } from '@vue-cesium/utils/cesium-props'\nimport { commonEmits } from '@vue-cesium/utils/emits'\nexport const circleOutlineGeometryProps = {\n  ...center,\n  ...radius,\n  ...ellipsoid,\n  ...height,\n  ...granularity,\n  ...extrudedHeight,\n  ...numberOfVerticalLines\n}\nexport default defineComponent({\n  name: 'VcGeometryCircleOutline',\n  props: circleOutlineGeometryProps,\n  emits: commonEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'CircleOutlineGeometry'\n    useGeometries(props, ctx, instance)\n\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || 'v-if'))\n  }\n})\n\nexport type VcGeometryCircleOutlineProps = {\n  /**\n   * The circle's center point in the fixed frame.\n   */\n  center: VcPosition\n  /**\n   * The radius in meters.\n   */\n  radius?: number\n  /**\n   * The ellipsoid the circle will be on.\n   */\n  ellipsoid?: Cesium.Ellipsoid\n  /**\n   * The distance in meters between the circle and the ellipsoid surface.\n   */\n  height?: number\n  /**\n   * The angular distance between points on the circle in radians.\n   */\n  granularity?: number\n  /**\n   * The distance in meters between the circle's extruded face and the ellipsoid surface.\n   */\n  extrudedHeight?: number\n  /**\n   * Number of lines to draw between the top and bottom of an extruded circle.\n   * Default value: 16\n   */\n  numberOfVerticalLines?: number\n  /**\n   * Triggers before the VcGeometryCircleOutline is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcGeometryCircleOutline is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcGeometryCircleOutline is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n}\n\nexport type VcGeometryCircleOutlineRef = VcComponentPublicInstance<VcGeometryCircleOutlineProps>\n"],"names":["center","radius","ellipsoid","height","granularity","extrudedHeight","numberOfVerticalLines","defineComponent","commonEmits","getCurrentInstance","useGeometries","createCommentVNode","kebabCase"],"mappings":";;;;;;;;;;;;AAcO,MAAM,0BAA6B,GAAA;AAAA,EACxC,GAAGA,kBAAA;AAAA,EACH,GAAGC,kBAAA;AAAA,EACH,GAAGC,qBAAA;AAAA,EACH,GAAGC,kBAAA;AAAA,EACH,GAAGC,uBAAA;AAAA,EACH,GAAGC,0BAAA;AAAA,EACH,GAAGC,iCAAA;AACL,EAAA;AACA,4BAAeC,mBAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,yBAAA;AAAA,EACN,KAAO,EAAA,0BAAA;AAAA,EACP,KAAO,EAAAC,iBAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAWC,sBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,uBAAA,CAAA;AACvB,IAAcC,gBAAA,CAAA,KAAA,EAAO,KAAK,QAAQ,CAAA,CAAA;AAElC,IAAA,OAAO,MAAG;AAjCd,MAAA,IAAA,EAAA,CAAA;AAiCiB,MAAA,OAAAC,sBAAA,CAAmBC,iBAAU,EAAS,GAAA,QAAA,CAAA,KAAA,KAAT,mBAAgB,QAAS,CAAA,IAAA,KAAQ,MAAM,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GACpF;AACF,CAAC,CAAA;;;;;"}