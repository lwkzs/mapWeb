{"version":3,"file":"index.js","sources":["../../../../../../packages/components/geometries/corridor-outline/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-03-30 10:35:54\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\geometries\\corridor-outline\\index.ts\n */\nimport { VcCartesian3Array, VcComponentInternalInstance, VcComponentPublicInstance, VcReadyObject } from '@vue-cesium/utils/types'\nimport { defineComponent, getCurrentInstance, createCommentVNode } from 'vue'\nimport { useGeometries } from '@vue-cesium/composables'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { positions, width, ellipsoid, granularity, height, extrudedHeight, cornerType } from '@vue-cesium/utils/cesium-props'\nimport { commonEmits } from '@vue-cesium/utils/emits'\nexport const corridorOutlineGeometryProps = {\n  ...positions,\n  ...width,\n  ...ellipsoid,\n  ...granularity,\n  ...height,\n  ...extrudedHeight,\n  ...cornerType\n}\nexport default defineComponent({\n  name: 'VcGeometryCorridorOutline',\n  props: corridorOutlineGeometryProps,\n  emits: commonEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'CorridorOutlineGeometry'\n    useGeometries(props, ctx, instance)\n\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || 'v-if'))\n  }\n})\n\nexport type VcGeometryCorridorOutlineProps = {\n  /**\n   * An array of positions that define the center of the corridor.\n   */\n  positions: VcCartesian3Array\n  /**\n   * The distance between the edges of the corridor in meters.\n   */\n  width: number\n  /**\n   * The ellipsoid to be used as a reference.\n   */\n  ellipsoid?: Cesium.Ellipsoid\n  /**\n   * The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n   */\n  granularity?: number\n  /**\n   * The distance in meters between the ellipsoid surface and the positions.\n   */\n  height?: number\n  /**\n   * The distance in meters between the ellipsoid surface and the extruded face.\n   */\n  extrudedHeight?: number\n  /**\n   * Determines the style of the corners.\n   */\n  cornerType?: Cesium.CornerType | number\n  /**\n   * Triggers before the VcGeometryCorridorOutline is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcGeometryCorridorOutline is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcGeometryCorridorOutline is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n}\n\nexport type VcGeometryCorridorOutlineRef = VcComponentPublicInstance<VcGeometryCorridorOutlineProps>\n"],"names":["positions","width","ellipsoid","granularity","height","extrudedHeight","cornerType","defineComponent","commonEmits","getCurrentInstance","useGeometries","createCommentVNode","kebabCase"],"mappings":";;;;;;;;;;;;AAcO,MAAM,4BAA+B,GAAA;AAAA,EAC1C,GAAGA,qBAAA;AAAA,EACH,GAAGC,iBAAA;AAAA,EACH,GAAGC,qBAAA;AAAA,EACH,GAAGC,uBAAA;AAAA,EACH,GAAGC,kBAAA;AAAA,EACH,GAAGC,0BAAA;AAAA,EACH,GAAGC,sBAAA;AACL,EAAA;AACA,8BAAeC,mBAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,2BAAA;AAAA,EACN,KAAO,EAAA,4BAAA;AAAA,EACP,KAAO,EAAAC,iBAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAWC,sBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,yBAAA,CAAA;AACvB,IAAcC,gBAAA,CAAA,KAAA,EAAO,KAAK,QAAQ,CAAA,CAAA;AAElC,IAAA,OAAO,MAAG;AAjCd,MAAA,IAAA,EAAA,CAAA;AAiCiB,MAAA,OAAAC,sBAAA,CAAmBC,iBAAU,EAAS,GAAA,QAAA,CAAA,KAAA,KAAT,mBAAgB,QAAS,CAAA,IAAA,KAAQ,MAAM,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GACpF;AACF,CAAC,CAAA;;;;;"}