{"version":3,"file":"index.js","sources":["../../../../../../packages/components/geometries/rectangle-outline/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-04-20 09:36:56\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\geometries\\rectangle-outline\\index.ts\n */\nimport { VcComponentInternalInstance, VcComponentPublicInstance, VcReadyObject, VcRectangle } from '@vue-cesium/utils/types'\nimport { defineComponent, getCurrentInstance, createCommentVNode } from 'vue'\nimport { useGeometries } from '@vue-cesium/composables'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { rectangle, ellipsoid, granularity, height, rotation, extrudedHeight } from '@vue-cesium/utils/cesium-props'\nimport { commonEmits } from '@vue-cesium/utils/emits'\nexport const rectangleOutlineGeometryProps = {\n  ...rectangle,\n  ...ellipsoid,\n  ...granularity,\n  ...height,\n  ...rotation,\n  ...extrudedHeight\n}\nexport default defineComponent({\n  name: 'VcGeometryRectangleOutline',\n  props: rectangleOutlineGeometryProps,\n  emits: commonEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'RectangleOutlineGeometry'\n    useGeometries(props, ctx, instance)\n\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || 'v-if'))\n  }\n})\n\nexport type VcGeometryRectangleOutlineProps = {\n  /**\n   * A cartographic rectangle with north, south, east and west properties in radians.\n   */\n  rectangle: VcRectangle\n  /**\n   * The ellipsoid on which the rectangle lies.\n   */\n  ellipsoid?: Cesium.Ellipsoid\n  /**\n   * The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n   */\n  granularity?: number\n  /**\n   * The distance in meters between the rectangle and the ellipsoid surface.\n   */\n  height?: number\n  /**\n   * The rotation of the rectangle, in radians. A positive rotation is counter-clockwise.\n   * Default value: 0.0\n   */\n  rotation?: number\n  /**\n   * The distance in meters between the rectangle's extruded face and the ellipsoid surface.\n   */\n  extrudedHeight?: number\n  /**\n   * Triggers before the VcGeometryRectangleOutline is loaded\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcGeometryRectangleOutline is successfully loaded\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcGeometryRectangleOutline is destroyed\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n}\n\nexport type VcGeometryRectangleOutlineRef = VcComponentPublicInstance<VcGeometryRectangleOutlineProps>\n"],"names":["rectangle","ellipsoid","granularity","height","rotation","extrudedHeight","defineComponent","commonEmits","getCurrentInstance","useGeometries","createCommentVNode","kebabCase"],"mappings":";;;;;;;;;;;;AAcO,MAAM,6BAAgC,GAAA;AAAA,EAC3C,GAAGA,qBAAA;AAAA,EACH,GAAGC,qBAAA;AAAA,EACH,GAAGC,uBAAA;AAAA,EACH,GAAGC,kBAAA;AAAA,EACH,GAAGC,oBAAA;AAAA,EACH,GAAGC,0BAAA;AACL,EAAA;AACA,+BAAeC,mBAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,4BAAA;AAAA,EACN,KAAO,EAAA,6BAAA;AAAA,EACP,KAAO,EAAAC,iBAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAWC,sBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,0BAAA,CAAA;AACvB,IAAcC,gBAAA,CAAA,KAAA,EAAO,KAAK,QAAQ,CAAA,CAAA;AAElC,IAAA,OAAO,MAAG;AAhCd,MAAA,IAAA,EAAA,CAAA;AAgCiB,MAAA,OAAAC,sBAAA,CAAmBC,iBAAU,EAAS,GAAA,QAAA,CAAA,KAAA,KAAT,mBAAgB,QAAS,CAAA,IAAA,KAAQ,MAAM,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GACpF;AACF,CAAC,CAAA;;;;;"}