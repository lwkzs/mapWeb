{"version":3,"file":"index.js","sources":["../../../../../../packages/components/geometries/wall-outline/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-03-30 13:25:35\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\geometries\\wall-outline\\index.ts\n */\nimport { VcCartesian3Array, VcComponentInternalInstance, VcComponentPublicInstance, VcReadyObject } from '@vue-cesium/utils/types'\nimport { defineComponent, getCurrentInstance, createCommentVNode } from 'vue'\nimport { useGeometries } from '@vue-cesium/composables'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { positions, granularity, maximumHeights, minimumHeights, ellipsoid } from '@vue-cesium/utils/cesium-props'\nimport { commonEmits } from '@vue-cesium/utils/emits'\nexport const wallOutlineProps = {\n  ...positions,\n  ...granularity,\n  ...maximumHeights,\n  ...minimumHeights,\n  ...ellipsoid\n}\nexport default defineComponent({\n  name: 'VcGeometryWallOutline',\n  props: wallOutlineProps,\n  emits: commonEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'WallOutlineGeometry'\n    useGeometries(props, ctx, instance)\n\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || 'v-if'))\n  }\n})\n\nexport type VcGeometryWallOutlineProps = {\n  /**\n   * An array of Cartesian objects, which are the points of the wall.\n   */\n  positions: VcCartesian3Array\n  /**\n   * The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\n   */\n  granularity?: number\n  /**\n   * An array parallel to positions that give the maximum height of the wall at positions. If undefined, the height of each position in used.\n   */\n  maximumHeights?: number[]\n  /**\n   * An array parallel to positions that give the minimum height of the wall at positions. If undefined, the height at each position is 0.0.\n   */\n  minimumHeights?: number[]\n  /**\n   * The ellipsoid for coordinate manipulation.\n   */\n  ellipsoid?: Cesium.Ellipsoid\n  /**\n   * Triggers before the VcGeometryWallOutline is loaded\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcGeometryWallOutline is successfully loaded\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcGeometryWallOutline is destroyed\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n}\n\nexport type VcGeometryWallOutlineRef = VcComponentPublicInstance<VcGeometryWallOutlineProps>\n"],"names":["positions","granularity","maximumHeights","minimumHeights","ellipsoid","defineComponent","commonEmits","getCurrentInstance","useGeometries","createCommentVNode","kebabCase"],"mappings":";;;;;;;;;;;;AAcO,MAAM,gBAAmB,GAAA;AAAA,EAC9B,GAAGA,qBAAA;AAAA,EACH,GAAGC,uBAAA;AAAA,EACH,GAAGC,0BAAA;AAAA,EACH,GAAGC,0BAAA;AAAA,EACH,GAAGC,qBAAA;AACL,EAAA;AACA,0BAAeC,mBAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,uBAAA;AAAA,EACN,KAAO,EAAA,gBAAA;AAAA,EACP,KAAO,EAAAC,iBAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAWC,sBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,qBAAA,CAAA;AACvB,IAAcC,gBAAA,CAAA,KAAA,EAAO,KAAK,QAAQ,CAAA,CAAA;AAElC,IAAA,OAAO,MAAG;AA/Bd,MAAA,IAAA,EAAA,CAAA;AA+BiB,MAAA,OAAAC,sBAAA,CAAmBC,iBAAU,EAAS,GAAA,QAAA,CAAA,KAAA,KAAT,mBAAgB,QAAS,CAAA,IAAA,KAAQ,MAAM,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GACpF;AACF,CAAC,CAAA;;;;;"}