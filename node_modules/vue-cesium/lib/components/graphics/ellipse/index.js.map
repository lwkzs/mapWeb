{"version":3,"file":"index.js","sources":["../../../../../../packages/components/graphics/ellipse/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-04-04 22:19:41\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\graphics\\ellipse\\index.ts\n */\nimport { createCommentVNode, defineComponent, getCurrentInstance } from 'vue'\nimport type {\n  VcCallbackPropertyFunction,\n  VcColor,\n  VcComponentInternalInstance,\n  VcComponentPublicInstance,\n  VcDistanceDisplayCondition,\n  VcMaterial,\n  VcReadyObject\n} from '@vue-cesium/utils/types'\nimport { useGraphics } from '@vue-cesium/composables'\nimport {\n  show,\n  distanceDisplayCondition,\n  heightReference,\n  extrudedHeightReference,\n  fill,\n  material,\n  outline,\n  outlineColor,\n  outlineWidth,\n  numberOfVerticalLines,\n  classificationType,\n  zIndex,\n  stRotation,\n  shadows,\n  semiMajorAxis,\n  semiMinorAxis,\n  height,\n  extrudedHeight,\n  rotation,\n  granularity\n} from '@vue-cesium/utils/cesium-props'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { commonEmits } from '@vue-cesium/utils/emits'\nexport const ellipseGraphicsProps = {\n  ...show,\n  ...semiMajorAxis,\n  ...semiMinorAxis,\n  ...height,\n  ...heightReference,\n  ...extrudedHeight,\n  ...extrudedHeightReference,\n  ...rotation,\n  ...stRotation,\n  ...granularity,\n  ...fill,\n  ...material,\n  ...outline,\n  ...outlineColor,\n  ...outlineWidth,\n  ...numberOfVerticalLines,\n  ...shadows,\n  ...distanceDisplayCondition,\n  ...classificationType,\n  ...zIndex\n}\nexport default defineComponent({\n  name: 'VcGraphicsEllipse',\n  props: ellipseGraphicsProps,\n  emits: commonEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'EllipseGraphics'\n    useGraphics(props, ctx, instance)\n\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || 'v-if'))\n  }\n})\n\nexport type VcGraphicsEllipseProps = {\n  /**\n   * A boolean Property specifying the visibility of the ellipse.\n   * Default value: truec\n   */\n  show?: boolean | Cesium.CallbackProperty | VcCallbackPropertyFunction<boolean>\n  /**\n   * The numeric Property specifying the semi-major axis.\n   */\n  semiMajorAxis?: number | Cesium.CallbackProperty | VcCallbackPropertyFunction<number>\n  /**\n   * The numeric Property specifying the semi-minor axis.\n   */\n  semiMinorAxis?: number | Cesium.CallbackProperty | VcCallbackPropertyFunction<number>\n  /**\n   * A numeric Property specifying the altitude of the ellipse relative to the ellipsoid surface.\n   */\n  height?: number | Cesium.CallbackProperty | VcCallbackPropertyFunction<number>\n  /**\n   * A Property specifying what the height from the entity position is relative to.\n   * Default value: HeightReference.NONE\n   */\n  heightReference?: number | Cesium.HeightReference | Cesium.CallbackProperty | VcCallbackPropertyFunction<number>\n  /**\n   * \tA numeric Property specifying the altitude of the ellipse's extruded face relative to the ellipsoid surface.\n   */\n  extrudedHeight?: number | Cesium.CallbackProperty | VcCallbackPropertyFunction<number>\n  /**\n   * A Property specifying what the extrudedHeight is relative to.\n   * Default value: HeightReference.NONE\n   */\n  extrudedHeightReference?: number | Cesium.HeightReference | Cesium.CallbackProperty | VcCallbackPropertyFunction<number>\n  /**\n   * A numeric property specifying the rotation of the ellipse counter-clockwise from north.\n   * Default value: 0.0\n   */\n  rotation?: number\n  /**\n   * A numeric property specifying the rotation of the ellipse texture counter-clockwise from north.\n   * Default value: 0.01\n   */\n  stRotation?: number\n  /**\n   * A numeric Property specifying the angular distance between points on the ellipse.\n   */\n  granularity?: number\n  /**\n   * A boolean Property specifying whether the cylinder is filled with the provided material.\n   * Default value: true\n   */\n  fill?: boolean | Cesium.CallbackProperty | VcCallbackPropertyFunction<boolean>\n  /**\n   * A Property specifying the material used to fill the ellipse.\n   * Default value: white\n   */\n  material?: VcMaterial\n  /**\n   * A boolean Property specifying whether the ellipse is outlined.\n   * Default value: false\n   */\n  outline?: boolean | Cesium.CallbackProperty | VcCallbackPropertyFunction<boolean>\n  /**\n   * A Property specifying the Color of the outline.\n   * Default value: black\n   */\n  outlineColor?: VcColor\n  /**\n   * A numeric Property specifying the width of the outline.\n   * Default value: 1.0\n   */\n  outlineWidth?: number | Cesium.CallbackProperty | VcCallbackPropertyFunction<number>\n  /**\n   * A numeric Property specifying the number of vertical lines to draw along the perimeter for the outline.\n   * Default value: 16\n   */\n  numberOfVerticalLines?: number | Cesium.CallbackProperty | VcCallbackPropertyFunction<number>\n  /**\n   * An enum Property specifying whether the ellipse casts or receives shadows from light sources.\n   * Default value: Cesium.ShadowMode.DISABLED\n   */\n  shadows?: number | Cesium.ShadowMode | Cesium.CallbackProperty | VcCallbackPropertyFunction<number>\n  /**\n   * A Property specifying at what distance from the camera that this ellipse will be displayed.\n   */\n  distanceDisplayCondition?: VcDistanceDisplayCondition\n  /**\n   * Triggers before the VcGraphicsEllipse is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcGraphicsEllipse is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcGraphicsEllipse is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when a property or sub-property is changed or modified.\n   */\n  onDefinitionChanged?: (property: Cesium.Property) => void\n}\n\nexport type VcGraphicsEllipseRef = VcComponentPublicInstance<VcGraphicsEllipseProps>\n"],"names":["show","semiMajorAxis","semiMinorAxis","height","heightReference","extrudedHeight","extrudedHeightReference","rotation","stRotation","granularity","fill","material","outline","outlineColor","outlineWidth","numberOfVerticalLines","shadows","distanceDisplayCondition","classificationType","zIndex","defineComponent","commonEmits","getCurrentInstance","useGraphics","createCommentVNode","kebabCase"],"mappings":";;;;;;;;;;;;AA2CO,MAAM,oBAAuB,GAAA;AAAA,EAClC,GAAGA,gBAAA;AAAA,EACH,GAAGC,yBAAA;AAAA,EACH,GAAGC,yBAAA;AAAA,EACH,GAAGC,kBAAA;AAAA,EACH,GAAGC,2BAAA;AAAA,EACH,GAAGC,0BAAA;AAAA,EACH,GAAGC,mCAAA;AAAA,EACH,GAAGC,oBAAA;AAAA,EACH,GAAGC,sBAAA;AAAA,EACH,GAAGC,uBAAA;AAAA,EACH,GAAGC,gBAAA;AAAA,EACH,GAAGC,oBAAA;AAAA,EACH,GAAGC,mBAAA;AAAA,EACH,GAAGC,wBAAA;AAAA,EACH,GAAGC,wBAAA;AAAA,EACH,GAAGC,iCAAA;AAAA,EACH,GAAGC,mBAAA;AAAA,EACH,GAAGC,oCAAA;AAAA,EACH,GAAGC,8BAAA;AAAA,EACH,GAAGC,kBAAA;AACL,EAAA;AACA,sBAAeC,mBAAgB,CAAA;AAAA,EAC7B,IAAM,EAAA,mBAAA;AAAA,EACN,KAAO,EAAA,oBAAA;AAAA,EACP,KAAO,EAAAC,iBAAA;AAAA,EACP,KAAA,CAAM,OAAO,GAAK,EAAA;AAEhB,IAAA,MAAM,WAAWC,sBAAmB,EAAA,CAAA;AACpC,IAAA,QAAA,CAAS,WAAc,GAAA,iBAAA,CAAA;AACvB,IAAYC,gBAAA,CAAA,KAAA,EAAO,KAAK,QAAQ,CAAA,CAAA;AAEhC,IAAA,OAAO,MAAG;AA3Ed,MAAA,IAAA,EAAA,CAAA;AA2EiB,MAAA,OAAAC,sBAAA,CAAmBC,iBAAU,EAAS,GAAA,QAAA,CAAA,KAAA,KAAT,mBAAgB,QAAS,CAAA,IAAA,KAAQ,MAAM,CAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GACpF;AACF,CAAC,CAAA;;;;;"}