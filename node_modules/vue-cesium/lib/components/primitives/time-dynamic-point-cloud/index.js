'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
require('../../../composables/index.js');
var cesiumProps = require('../../../utils/cesium-props.js');
var util = require('../../../utils/util.js');
var emits = require('../../../utils/emits.js');
var index = require('../../../composables/use-primitives/index.js');

"use strict";
const timeDynamicPointCloudProps = {
  ...cesiumProps.clock,
  intervals: Object,
  ...cesiumProps.show,
  ...cesiumProps.modelMatrix,
  ...cesiumProps.shadows,
  ...cesiumProps.maximumMemoryUsage,
  shading: Object,
  ...cesiumProps.tileStyle,
  ...cesiumProps.clippingPlanes,
  ...cesiumProps.enableMouseEvent
};
var PrimitiveTimeDynamicPointCloud = vue.defineComponent({
  name: "VcPrimitiveTimeDynamicPointCloud",
  props: timeDynamicPointCloudProps,
  emits: {
    ...emits.primitiveEmits,
    frameChanged: (evt) => true,
    frameFailed: (evt) => true
  },
  setup(props, ctx) {
    const instance = vue.getCurrentInstance();
    instance.cesiumClass = "VcPrimitiveTimeDynamicPointCloud";
    instance.cesiumEvents = ["frameChanged", "frameFailed"];
    const primitivesState = index["default"](props, ctx, instance);
    instance.createCesiumObject = async () => {
      const options = primitivesState == null ? void 0 : primitivesState.transformProps(props);
      options.style = options.tileStyle;
      delete options.tileStyle;
      return new Cesium.TimeDynamicPointCloud(options);
    };
    return () => {
      var _a;
      return vue.createCommentVNode(util.kebabCase(((_a = instance.proxy) == null ? void 0 : _a.$options.name) || ""));
    };
  }
});

exports["default"] = PrimitiveTimeDynamicPointCloud;
exports.timeDynamicPointCloudProps = timeDynamicPointCloudProps;
//# sourceMappingURL=index.js.map
