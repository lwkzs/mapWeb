declare class TiandituImageryProvider {
    _mapStyle: string;
    _url: string;
    _token: string;
    _layer: string;
    _style: string;
    _tileMatrixSetID: string;
    _tileMatrixLabels: string;
    _format: string;
    _epsgCode: string;
    _tilingScheme: Cesium.GeographicTilingScheme | Cesium.WebMercatorTilingScheme;
    _tileWidth: number;
    _tileHeight: number;
    _minimumLevel: number;
    _maximumLevel: number;
    _rectangle: Cesium.Rectangle;
    _errorEvent: Cesium.Event;
    _credit: Cesium.Credit;
    _subdomains: string[];
    _tileDiscardPolicy: any;
    _ready: boolean;
    _resource: Cesium.Resource;
    constructor(options: any);
    getTileCredits(x: any, y: any, level: any): any;
    requestImage(x: any, y: any, level: any, request: any): Promise<Cesium.ImageryTypes | Cesium.CompressedTextureBuffer>;
    pickFeatures(x: any, y: any, level: any, longitude: any, latitude: any): any;
    get url(): string;
    get proxy(): Cesium.Proxy;
    get mapStyle(): string;
    get tileWidth(): number;
    get tileHeight(): number;
    get maximumLevel(): number;
    get minimumLevel(): number;
    get tilingScheme(): Cesium.GeographicTilingScheme | Cesium.WebMercatorTilingScheme;
    get rectangle(): Cesium.Rectangle;
    get errorEvent(): Cesium.Event<(...args: any[]) => void>;
    get ready(): boolean;
    get credit(): Cesium.Credit;
    get hasAlphaChannel(): boolean;
    get tileDiscardPolicy(): any;
}
export default TiandituImageryProvider;
