{"version":3,"file":"useViewer.js","sources":["../../../../../../packages/components/viewer/src/useViewer.ts"],"sourcesContent":["import { watch, ref, onMounted, onUnmounted, nextTick, reactive, VNode } from 'vue'\nimport mitt, { Emitter } from 'mitt'\nimport { useLocale } from '@vue-cesium/composables'\nimport defaultProps from './defaultProps'\nimport { mergeDescriptors } from '@vue-cesium/utils/merge-descriptors'\nimport { dirname, isEmptyObj, hasOwn } from '@vue-cesium/utils/util'\nimport { getInstanceListener, $ } from '@vue-cesium/utils/private/vm'\nimport type {\n  VcComponentInternalInstance,\n  VcCamera,\n  VcReadyObject,\n  VcComponentPublicInstance,\n  AnyObject,\n  VcMittEvents,\n  VcTerrainProvider,\n  VcDatasource,\n  ViewerWidgetResizedEvent,\n  VcContextOptions,\n  VcViewerProvider,\n  Mars3dConfig,\n  DCConfig\n} from '@vue-cesium/utils/types'\nimport { compareCesiumVersion, setViewerCamera } from '@vue-cesium/utils/cesium-helpers'\nimport useLog from '@vue-cesium/composables/private/use-log'\nimport { useEvents } from '@vue-cesium/composables'\nimport { getMars3dConfig as getDefaultMars3dConfig } from './loadUtil'\nimport { useGlobalConfig } from '@vue-cesium/composables/use-global-config'\nimport { VcSkeletonProps } from '../../ui/skeleton'\nimport useVcExtension from '@vue-cesium/composables/private/use-vc-extension'\n\nexport const viewerProps = defaultProps\n\nexport default function (props: VcViewerProps, ctx, vcInstance: VcComponentInternalInstance) {\n  // state\n  let createResolve, reject\n  const creatingPromise = new Promise<VcReadyObject>((_resolve, _reject) => {\n    createResolve = _resolve\n    reject = _reject\n  })\n\n  const viewerRef = ref<HTMLElement>()\n  const isReady = ref(false)\n  const vcMitt: Emitter<VcMittEvents> = mitt()\n  const { emit } = ctx\n\n  const globalConfig = useGlobalConfig()\n\n  const logger = useLog(vcInstance)\n\n  vcInstance.mounted = false\n  vcInstance.vcMitt = vcMitt\n  vcInstance.cesiumClass = 'Viewer'\n  vcInstance.children = []\n  const eventsState = useEvents(props, vcInstance, logger)\n\n  const layout = reactive({\n    toolbarContainerRC: undefined,\n    timelineContainerRC: undefined,\n    animationContainerRC: undefined,\n    bottomContainerRC: undefined\n  })\n\n  let loadLibs: Array<string> = []\n\n  logger.debug('viewer creating')\n\n  const { t } = useLocale()\n\n  const { invokeExtensions, revokeExtensions } = useVcExtension()\n\n  // watch\n  watch(\n    () => props.selectionIndicator,\n    val => {\n      const { viewer, viewerElement } = vcInstance\n      const { defined, SelectionIndicator } = Cesium\n      let selectionIndicatorContainer\n      if (defined(viewer.selectionIndicator) && !viewer.selectionIndicator.isDestroyed() && !val) {\n        selectionIndicatorContainer = viewer.selectionIndicator.container\n        viewerElement?.removeChild(selectionIndicatorContainer)\n        viewer.selectionIndicator.destroy()\n        viewer._selectionIndicator = undefined\n      } else if (!defined(viewer.selectionIndicator) || viewer.selectionIndicator.isDestroyed()) {\n        selectionIndicatorContainer = document.createElement('div')\n        selectionIndicatorContainer.className = 'cesium-viewer-selectionIndicatorContainer'\n        viewerElement?.appendChild(selectionIndicatorContainer)\n        const selectionIndicator = new SelectionIndicator(selectionIndicatorContainer, viewer.scene)\n        viewer._selectionIndicator = selectionIndicator\n      }\n\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'selectionIndicator',\n        status: val ? 'added' : 'removed',\n        target: selectionIndicatorContainer\n      })\n    }\n  )\n\n  watch(\n    () => props.infoBox,\n    val => {\n      const { viewer, viewerElement } = vcInstance\n      const { defined, InfoBox } = Cesium\n      const events = ['cameraClicked', 'closeClicked']\n      let infoBoxContainer\n      if (defined(viewer.infoBox) && !viewer.infoBox.isDestroyed() && !val) {\n        const infoBoxViewModel = viewer.infoBox.viewModel\n        infoBoxViewModel && eventsState.bindEvents(infoBoxViewModel, events, false)\n        infoBoxContainer = viewer.infoBox.container\n        viewerElement?.removeChild(infoBoxContainer)\n        viewer.infoBox.destroy()\n        viewer._infoBox = undefined\n      } else if (!defined(viewer.infoBox) || viewer.infoBox.isDestroyed()) {\n        infoBoxContainer = document.createElement('div')\n        infoBoxContainer.className = 'cesium-viewer-infoBoxContainer'\n        viewerElement?.appendChild(infoBoxContainer)\n        const infoBox = new InfoBox(infoBoxContainer)\n        const infoBoxViewModel = infoBox.viewModel\n        viewer._onInfoBoxCameraClicked && viewer._eventHelper?.add(infoBoxViewModel.cameraClicked, viewer._onInfoBoxCameraClicked, viewer)\n        viewer._onInfoBoxClockClicked && viewer._eventHelper?.add(infoBoxViewModel.closeClicked, viewer._onInfoBoxClockClicked, viewer)\n        infoBoxViewModel && eventsState.bindEvents(infoBoxViewModel, events, true)\n        viewer._infoBox = infoBox\n      }\n      viewer.forceResize()\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'infoBox',\n        status: val ? 'added' : 'removed',\n        target: infoBoxContainer\n      })\n    }\n  )\n\n  watch(\n    () => props.geocoder,\n    val => {\n      const { viewer } = vcInstance\n      const toolbar = viewer._toolbar\n      const { defined, Geocoder } = Cesium\n      let geocoderContainer\n      if (defined(viewer.geocoder) && !viewer.geocoder.isDestroyed() && !val) {\n        geocoderContainer = viewer.geocoder.container\n        toolbar?.removeChild(geocoderContainer)\n        viewer.geocoder.destroy()\n        viewer._geocoder = undefined\n      } else if (!defined(viewer.geocoder) || viewer.geocoder.isDestroyed()) {\n        geocoderContainer = document.createElement('div')\n        geocoderContainer.className = 'cesium-viewer-geocoderContainer'\n        toolbar?.appendChild(geocoderContainer)\n        const geocoder = new Geocoder({\n          container: geocoderContainer,\n          geocoderServices:\n            defined(props.geocoder) && typeof props.geocoder !== 'boolean'\n              ? Array.isArray(props.geocoder)\n                ? props.geocoder\n                : [props.geocoder]\n              : undefined,\n          scene: viewer.scene\n        })\n        viewer._clearObjects && viewer._eventHelper?.add(geocoder.viewModel.search.beforeExecute, viewer._clearObjects, viewer)\n        viewer._geocoder = geocoder\n        resizeToolbar(toolbar, geocoderContainer)\n      }\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'geocoder',\n        status: val ? 'added' : 'removed',\n        target: geocoderContainer\n      })\n    }\n  )\n\n  watch(\n    () => props.homeButton,\n    val => {\n      const { viewer } = vcInstance\n      const toolbar = viewer._toolbar\n      const { defined, HomeButton } = Cesium\n      if (defined(viewer.homeButton) && !viewer.homeButton.isDestroyed() && !val) {\n        viewer.homeButton.destroy()\n        viewer._homeButton = undefined\n      } else if (!defined(viewer.homeButton) || viewer.homeButton.isDestroyed()) {\n        const homeButton = new HomeButton(toolbar!, viewer.scene)\n        if (defined(viewer.geocoder)) {\n          viewer._eventHelper?.add(homeButton.viewModel.command.afterExecute, function () {\n            const viewModel = viewer.geocoder.viewModel\n            viewModel.searchText = ''\n            viewModel.isSearchInProgress && (viewModel as any).search()\n          })\n        }\n        viewer._clearTrackedObject && viewer._eventHelper?.add(homeButton.viewModel.command.beforeExecute, viewer._clearTrackedObject, viewer)\n        viewer._homeButton = homeButton\n        resizeToolbar(toolbar, homeButton)\n      }\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'homeButton',\n        status: val ? 'added' : 'removed',\n        target: toolbar\n      })\n    }\n  )\n\n  watch(\n    () => props.sceneModePicker,\n    val => {\n      const { viewer } = vcInstance\n      const toolbar = viewer._toolbar\n      const { defined, DeveloperError, SceneModePicker } = Cesium\n      if (defined(viewer.sceneModePicker) && !viewer.sceneModePicker.isDestroyed() && !val) {\n        viewer.sceneModePicker.destroy()\n        viewer._sceneModePicker = undefined\n      } else if (!defined(viewer.sceneModePicker) || viewer.sceneModePicker.isDestroyed()) {\n        if (props.sceneModePicker && props.scene3DOnly) {\n          throw new DeveloperError('options.sceneModePicker is not available when options.scene3DOnly is set to true.')\n        }\n        if (!props.scene3DOnly && props.sceneModePicker) {\n          const sceneModePicker = new SceneModePicker(toolbar!, viewer.scene)\n          viewer._sceneModePicker = sceneModePicker\n          resizeToolbar(toolbar, sceneModePicker)\n        }\n      }\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'sceneModePicker',\n        status: val ? 'added' : 'removed',\n        target: toolbar\n      })\n    }\n  )\n\n  watch(\n    () => props.projectionPicker,\n    val => {\n      const { viewer } = vcInstance\n      const toolbar = viewer._toolbar\n      const { defined, ProjectionPicker } = Cesium\n      if (defined(viewer.projectionPicker) && !viewer.projectionPicker.isDestroyed() && !val) {\n        viewer.projectionPicker.destroy()\n        viewer._projectionPicker = undefined\n      } else if (!defined(viewer.projectionPicker) || viewer.projectionPicker.isDestroyed()) {\n        const projectionPicker = new ProjectionPicker(toolbar!, viewer.scene)\n        viewer._projectionPicker = projectionPicker\n        resizeToolbar(toolbar, projectionPicker)\n      }\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'projectionPicker',\n        status: val ? 'added' : 'removed',\n        target: toolbar\n      })\n    }\n  )\n\n  watch(\n    () => props.baseLayerPicker,\n    async val => {\n      const { viewer } = vcInstance\n      const toolbar = viewer._toolbar\n      const {\n        defined,\n        buildModuleUrl,\n        DeveloperError,\n        defaultValue,\n        createDefaultImageryProviderViewModels,\n        createDefaultTerrainProviderViewModels,\n        BaseLayerPicker\n      } = Cesium\n      if (defined(viewer.baseLayerPicker) && !viewer.baseLayerPicker.isDestroyed() && !val) {\n        viewer.baseLayerPicker.destroy()\n        viewer._baseLayerPicker = undefined\n        viewer.imageryLayers.remove(viewer.imageryLayers.get(viewer.imageryLayers.length - 1))\n        const url = buildModuleUrl('Assets/Textures/NaturalEarthII')\n        const baseLayer = viewer.imageryLayers.addImageryProvider(\n          compareCesiumVersion(Cesium.VERSION, '1.104')\n            ? await Cesium.TileMapServiceImageryProvider.fromUrl(url)\n            : new Cesium.TileMapServiceImageryProvider({\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                url\n              })\n        )\n        viewer.imageryLayers.lowerToBottom(baseLayer)\n      } else if (!defined(viewer.baseLayerPicker) || viewer.baseLayerPicker.isDestroyed()) {\n        const createBaseLayerPicker =\n          (!Cesium.defined(viewer.scene.globe) || props.globe !== false) &&\n          (!Cesium.defined(viewer.baseLayerPicker) || props.baseLayerPicker !== false)\n\n        if (createBaseLayerPicker && defined(props.imageryProvider)) {\n          throw new DeveloperError(`options.imageryProvider is not available when using the BaseLayerPicker widget.\n        Either specify options.selectedImageryProviderViewModel instead or set options.baseLayerPicker to false.`)\n        }\n        if (!createBaseLayerPicker && defined(props.selectedImageryProviderViewModel)) {\n          throw new DeveloperError(`options.selectedImageryProviderViewModel is not available when not using the BaseLayerPicker widget.\n        Either specify options.imageryProvider instead or set options.baseLayerPicker to true.`)\n        }\n        if (createBaseLayerPicker && defined(props.terrainProvider)) {\n          throw new DeveloperError(`options.terrainProvider is not available when using the BaseLayerPicker widget.\n        Either specify options.selectedTerrainProviderViewModel instead or set options.baseLayerPicker to false.`)\n        }\n        if (!createBaseLayerPicker && defined(props.selectedTerrainProviderViewModel)) {\n          throw new DeveloperError(`options.selectedTerrainProviderViewModel is not available when not using the BaseLayerPicker widget.\n        Either specify options.terrainProvider instead or set options.baseLayerPicker to true.`)\n        }\n        if (createBaseLayerPicker) {\n          const imageryProviderViewModels = defaultValue(props.imageryProviderViewModels, createDefaultImageryProviderViewModels())\n          const terrainProviderViewModels = defaultValue(props.terrainProviderViewModels, createDefaultTerrainProviderViewModels())\n          const baseLayerPicker = new BaseLayerPicker(toolbar!, {\n            globe: viewer.scene.globe,\n            imageryProviderViewModels: imageryProviderViewModels,\n            selectedImageryProviderViewModel: imageryProviderViewModels[0],\n            terrainProviderViewModels: terrainProviderViewModels,\n            selectedTerrainProviderViewModel: terrainProviderViewModels[0]\n          })\n\n          const elements = toolbar?.getElementsByClassName('cesium-baseLayerPicker-dropDown')\n\n          const baseLayerPickerDropDown = elements?.[0]\n          viewer._baseLayerPickerDropDown = baseLayerPickerDropDown\n          viewer._baseLayerPicker = baseLayerPicker\n          viewer.imageryLayers.raiseToTop(viewer.imageryLayers.get(0))\n          resizeToolbar(toolbar, baseLayerPicker)\n        }\n      }\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'baseLayerPicker',\n        status: val ? 'added' : 'removed',\n        target: toolbar\n      })\n    }\n  )\n\n  watch(\n    () => props.navigationHelpButton,\n    val => {\n      const { viewer } = vcInstance\n      const toolbar = viewer._toolbar\n      const { defined, defaultValue, NavigationHelpButton } = Cesium\n      if (defined(viewer.navigationHelpButton) && !viewer.navigationHelpButton.isDestroyed() && !val) {\n        viewer.navigationHelpButton.destroy()\n        viewer._navigationHelpButton = undefined\n      } else if (!defined(viewer.navigationHelpButton) || viewer.navigationHelpButton.isDestroyed()) {\n        let showNavHelp = true\n        try {\n          if (defined(window.localStorage)) {\n            const hasSeenNavHelp = window.localStorage.getItem('cesium-hasSeenNavHelp')\n            if (defined(hasSeenNavHelp) && Boolean(hasSeenNavHelp)) {\n              showNavHelp = false\n            } else {\n              window.localStorage.setItem('cesium-hasSeenNavHelp', 'true')\n            }\n          }\n        } catch (e) {\n          //\n        }\n        const navigationHelpButton = new NavigationHelpButton({\n          container: toolbar!,\n          instructionsInitiallyVisible: defaultValue(props.navigationInstructionsInitiallyVisible, showNavHelp)\n        })\n        viewer._navigationHelpButton = navigationHelpButton\n        resizeToolbar(toolbar, navigationHelpButton)\n      }\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'navigationHelpButton',\n        status: val ? 'added' : 'removed',\n        target: toolbar\n      })\n    }\n  )\n\n  watch(\n    () => props.animation,\n    val => {\n      const { viewer, viewerElement } = vcInstance\n      const { defined, Animation, AnimationViewModel } = Cesium\n      let animationContainer\n      if (defined(viewer.animation) && !viewer.animation.isDestroyed() && !val) {\n        animationContainer = viewer.animation.container\n        viewerElement?.removeChild(animationContainer)\n        viewer.animation.destroy()\n        viewer._animation = undefined\n      } else if (!defined(viewer.animation) || viewer.animation.isDestroyed()) {\n        animationContainer = document.createElement('div')\n        animationContainer.className = 'cesium-viewer-animationContainer'\n        viewerElement?.appendChild(animationContainer)\n        const animation = new Animation(animationContainer, new AnimationViewModel(viewer.clockViewModel))\n        animation.viewModel.dateFormatter = localeDateTimeFormatter\n        animation.viewModel.timeFormatter = localeTimeFormatter\n        viewer._animation = animation\n      }\n      viewer.forceResize()\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'animation',\n        status: val ? 'added' : 'removed',\n        target: animationContainer\n      })\n    }\n  )\n\n  watch(\n    () => props.timeline,\n    val => {\n      const { viewer, viewerElement } = vcInstance\n      const { defined, Timeline } = Cesium\n      let timelineContainer\n      if (defined(viewer.timeline) && !viewer.timeline.isDestroyed() && !val) {\n        timelineContainer = viewer.timeline.container\n        viewerElement?.removeChild(timelineContainer)\n        viewer.timeline.destroy()\n        viewer._timeline = undefined\n      } else if (!defined(viewer.timeline) || viewer.timeline.isDestroyed()) {\n        timelineContainer = document.createElement('div')\n        timelineContainer.className = 'cesium-viewer-timelineContainer'\n        viewerElement?.appendChild(timelineContainer)\n        const timeline = new Timeline(timelineContainer, viewer.clock)\n        timeline.makeLabel = time => {\n          return localeDateTimeFormatter(time)\n        }\n        timeline.addEventListener?.('settime', onTimelineScrubfunction, false)\n        timeline.zoomTo(viewer.clock.startTime, viewer.clock.stopTime)\n        viewer._timeline = timeline\n      }\n      viewer.forceResize()\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'timeline',\n        status: val ? 'added' : 'removed',\n        target: timelineContainer\n      })\n    }\n  )\n\n  watch(\n    () => props.fullscreenButton,\n    val => {\n      const { viewer, viewerElement } = vcInstance\n      const { defined, FullscreenButton } = Cesium\n      let fullscreenContainer\n      if (defined(viewer.fullscreenButton) && !viewer.fullscreenButton.isDestroyed() && !val) {\n        fullscreenContainer = viewer.fullscreenButton.container\n        viewerElement?.removeChild(fullscreenContainer)\n        viewer.fullscreenButton.destroy()\n        viewer._fullscreenButton = undefined\n      } else if (!defined(viewer.fullscreenButton) || viewer.fullscreenButton.isDestroyed()) {\n        fullscreenContainer = document.createElement('div')\n        fullscreenContainer.className = 'cesium-viewer-fullscreenContainer'\n        viewerElement?.appendChild(fullscreenContainer)\n        const fullscreenButton = new FullscreenButton(fullscreenContainer, viewerElement)\n        viewer._fullscreenButton = fullscreenButton\n      }\n      viewer.forceResize()\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'fullscreenButton',\n        status: val ? 'added' : 'removed',\n        target: fullscreenContainer\n      })\n    }\n  )\n\n  watch(\n    () => props.fullscreenElement,\n    val => {\n      const { viewer } = vcInstance\n      const { defined } = Cesium\n      if (!defined(viewer.fullscreenButton)) {\n        return\n      }\n      if (defined(val)) {\n        viewer.fullscreenButton.viewModel.fullscreenElement = val as Element\n      }\n    }\n  )\n\n  watch(\n    () => props.vrButton,\n    val => {\n      const { viewer, viewerElement } = vcInstance\n      const { defined, VRButton } = Cesium\n      let vrContainer\n      if (defined(viewer.vrButton) && !viewer.vrButton.isDestroyed() && !val) {\n        vrContainer = viewer.vrButton.container\n        viewerElement?.removeChild(vrContainer)\n        viewer.vrButton.destroy()\n        viewer._vrButton = undefined\n      } else if (!defined(viewer.vrButton) || viewer.vrButton.isDestroyed()) {\n        vrContainer = document.createElement('div')\n        vrContainer.className = 'cesium-viewer-vrContainer'\n        viewerElement?.appendChild(vrContainer)\n        const vrButton = new VRButton(vrContainer, viewer.scene, viewerElement)\n        const viewModelCommand = vrButton.viewModel.command as any\n        ;(vrButton.viewModel as any)._command = function (VRButtonViewModel) {\n          viewModelCommand()\n          enableVRUI(viewer, VRButtonViewModel.isVRMode)\n        }\n        viewer._vrButton = vrButton\n      }\n      viewer.forceResize()\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'fullscreenButton',\n        status: val ? 'added' : 'removed',\n        target: vrContainer\n      })\n    }\n  )\n\n  watch(\n    () => props.useDefaultRenderLoop,\n    val => {\n      vcInstance.viewer.useDefaultRenderLoop = val\n    }\n  )\n\n  watch(\n    () => props.sceneMode,\n    val => {\n      const { SceneMode } = Cesium\n      if (SceneMode.COLUMBUS_VIEW === val || SceneMode.MORPHING === val || SceneMode.SCENE2D === val || SceneMode.SCENE3D === val) {\n        vcInstance.viewer.scene.mode = val\n      }\n    }\n  )\n\n  watch(\n    () => props.shouldAnimate,\n    val => {\n      vcInstance.viewer.clock.shouldAnimate = val\n    }\n  )\n\n  watch(\n    () => props.terrainExaggeration,\n    val => {\n      vcInstance.viewer._terrainExaggeration = val\n    }\n  )\n\n  watch(\n    () => props.shadows,\n    val => {\n      vcInstance.viewer.scene.shadowMap.enabled = val\n    }\n  )\n\n  watch(\n    () => props.terrainProvider,\n    val => {\n      val && (vcInstance.viewer.terrainProvider = val)\n    }\n  )\n\n  watch(\n    () => props.camera,\n    val => {\n      setViewerCamera(vcInstance.viewer, val)\n    },\n    { deep: true }\n  )\n\n  watch(\n    () => props.imageryProvider,\n    (val, oldVal) => {\n      const { viewer } = vcInstance\n      const { defined } = Cesium\n      if (defined(val)) {\n        for (let i = 0; i < viewer.imageryLayers.length; i++) {\n          viewer.imageryLayers.get(i).imageryProvider === oldVal && viewer.imageryLayers.remove(viewer.imageryLayers[i])\n        }\n        val && viewer.imageryLayers.addImageryProvider(val)\n      }\n    }\n  )\n\n  watch(\n    () => props.showCredit,\n    val => {\n      const { viewer } = vcInstance\n      ;(viewer.cesiumWidget.creditContainer as HTMLElement).style.display = val ? 'inline' : 'none'\n      viewer.viewerWidgetResized.raiseEvent({\n        type: 'credit',\n        status: val ? 'added' : 'removed',\n        target: viewer.cesiumWidget.creditContainer\n      })\n    }\n  )\n\n  watch(\n    () => props.debugShowFramesPerSecond,\n    val => {\n      const { viewer } = vcInstance\n      viewer.scene.debugShowFramesPerSecond = val\n    }\n  )\n\n  // methods\n\n  /**\n   * 检测是否引入 CesiumJS\n   */\n  const beforeLoad = async function (): Promise<void> {\n    logger.debug('beforeLoad - viewer')\n    const listener = getInstanceListener(vcInstance, 'beforeLoad')\n    listener && emit('beforeLoad', vcInstance)\n    globalConfig.value.__scriptPromise = globalConfig.value.__scriptPromise || getCesiumScript()\n    await globalConfig.value.__scriptPromise\n  }\n  /**\n   * 初始化 Viewer，成功返回 {Cesium, viewer, instance}， 失败返回false。\n   * @returns VcReadyObject\n   */\n  const load = async function (): Promise<boolean | VcReadyObject> {\n    logger.debug('loading-viewer')\n    if (vcInstance.mounted) {\n      return false\n    }\n\n    await beforeLoad()\n\n    if (typeof Cesium === 'undefined') {\n      return false\n    }\n\n    const { Ion, buildModuleUrl, ImageryLayer, TileMapServiceImageryProvider, Viewer, defined, Math: CesiumMath, Event } = Cesium\n    const accessToken = props.accessToken ? props.accessToken : globalConfig.value.accessToken\n    Ion.defaultAccessToken = accessToken\n\n    const url = buildModuleUrl('Assets/Textures/NaturalEarthII')\n    const options: AnyObject = {}\n    props &&\n      Object.keys(props).forEach(vueProp => {\n        if (props[vueProp] === undefined || props[vueProp] === null) {\n          return\n        }\n        options[vueProp] = props[vueProp]\n      })\n\n    options.fullscreenElement = isEmptyObj(options.fullscreenElement) ? $(viewerRef) : options.fullscreenElement\n\n    if (compareCesiumVersion(Cesium.VERSION, '1.104')) {\n      options.baseLayer =\n        isEmptyObj(options.baseLayer) && options.baseLayer !== false\n          ? ImageryLayer.fromProviderAsync(TileMapServiceImageryProvider.fromUrl(url), {})\n          : options.baseLayer\n    } else {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      options.imageryProvider = isEmptyObj(options.imageryProvider) ? new TileMapServiceImageryProvider({ url }) : options.imageryProvider\n    }\n\n    let viewer: Cesium.Viewer\n\n    if (props.viewerCreator) {\n      viewer = props.viewerCreator(vcInstance, $(viewerRef), options)\n    } else {\n      if (globalThis.mars3d) {\n        vcInstance.map = new mars3d.Map($(viewerRef).id, {\n          scene: options,\n          control: options\n        })\n        viewer = vcInstance.map?._viewer\n      } else if (globalThis.DC) {\n        vcInstance.dcViewer = new DC.Viewer($(viewerRef).id, options)\n        viewer = vcInstance.dcViewer?.delegate\n      } else if (globalThis.XE) {\n        vcInstance.earth = new globalThis.XE.Earth($(viewerRef), options)\n        viewer = vcInstance.earth?.czm.viewer\n      } else {\n        viewer = new Viewer($(viewerRef) as HTMLElement, options)\n      }\n    }\n\n    // 扩展\n    invokeExtensions(viewer)\n\n    vcInstance.Cesium = Cesium\n    vcInstance.viewer = viewer\n    vcInstance.viewerElement = (viewer as any)._element\n    vcInstance.mounted = true\n\n    if (compareCesiumVersion(Cesium.VERSION, '1.83')) {\n      if (compareCesiumVersion(Cesium.VERSION, '1.116')) {\n        viewer.scene.verticalExaggeration = options.verticalExaggeration || options.terrainExaggeration\n      } else {\n        viewer.scene.globe['terrainExaggeration'] = options.verticalExaggeration || options.terrainExaggeration\n      }\n    }\n\n    // vue-cesium 扩展补充\n    // vue-cesium extension\n    defined(options.camera) && setViewerCamera(viewer, options.camera)\n\n    const listener = getInstanceListener(vcInstance, 'update:camera')\n    listener &&\n      viewer.camera.changed.addEventListener(() => {\n        const cartographic = viewer.camera.positionCartographic\n        let cameraNew: VcCamera\n        if (hasOwn(options.camera.position, 'lng')) {\n          cameraNew = {\n            position: {\n              lng: CesiumMath.toDegrees(cartographic.longitude),\n              lat: CesiumMath.toDegrees(cartographic.latitude),\n              height: cartographic.height\n            },\n            heading: CesiumMath.toDegrees(viewer.camera.heading || 360),\n            pitch: CesiumMath.toDegrees(viewer.camera.pitch || -90),\n            roll: CesiumMath.toDegrees(viewer.camera.roll || 0)\n          }\n        } else {\n          cameraNew = {\n            position: {\n              x: viewer.camera.position.x,\n              y: viewer.camera.position.y,\n              z: viewer.camera.position.z\n            },\n            heading: viewer.camera.heading || 2 * Math.PI,\n            pitch: viewer.camera.pitch || -Math.PI / 2,\n            roll: viewer.camera.roll || 0\n          }\n        }\n\n        emit('update:camera', cameraNew)\n      })\n\n    if (defined(viewer.animation)) {\n      viewer.animation.viewModel.dateFormatter = localeDateTimeFormatter as Cesium.AnimationViewModel.DateFormatter\n      viewer.animation.viewModel.timeFormatter = localeTimeFormatter as Cesium.AnimationViewModel.TimeFormatter\n    }\n\n    if (defined(viewer.timeline)) {\n      viewer.timeline.makeLabel = time => {\n        return localeDateTimeFormatter(time)\n      }\n      viewer.timeline.zoomTo(viewer.clock.startTime, viewer.clock.stopTime)\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if ((props as any).logo) {\n        logger.warn(\"'logo' is deprecated. Use `showCredit` prop instead. \")\n      }\n    }\n\n    !props.showCredit && ((viewer.cesiumWidget.creditContainer as HTMLElement).style.display = 'none')\n\n    props.debugShowFramesPerSecond && (viewer.scene.debugShowFramesPerSecond = true)\n\n    viewer.viewerWidgetResized = viewer.viewerWidgetResized || new Event()\n    viewer.viewerWidgetResized.addEventListener(onViewerWidgetResized)\n    viewer.imageryLayers.layerAdded.addEventListener(onImageryLayerAdded)\n    eventsState.registerEvents(true)\n    const readyObj: VcReadyObject = {\n      Cesium,\n      viewer,\n      vm: vcInstance\n    }\n    if (globalThis.XE) {\n      Object.assign(readyObj, {\n        earth: vcInstance.earth\n      })\n    } else if (globalThis.mars3d) {\n      Object.assign(readyObj, {\n        map: vcInstance.map\n      })\n    } else if (globalThis.DC) {\n      Object.assign(readyObj, {\n        dcViewer: vcInstance.dcViewer\n      })\n    }\n\n    const listenerReady = getInstanceListener(vcInstance, 'ready')\n    listenerReady && emit('ready', readyObj)\n    vcMitt?.emit('ready', readyObj)\n    nextTick(() => {\n      viewer.resize()\n      onViewerWidgetResized({\n        type: 'viewer',\n        status: 'added',\n        target: viewer.container as HTMLElement\n      })\n      isReady.value = true\n    })\n\n    logger.debug('loaded-viewer')\n\n    Object.assign(vcInstance.proxy, {\n      cesiumObject: viewer\n    })\n    return readyObj\n  }\n\n  /**\n   * Viewer 销毁方法。\n   */\n  const unload = async function () {\n    if (!vcInstance.mounted) {\n      return false\n    }\n\n    logger.debug('viewer---unloading')\n    let unloadingResolve\n    globalConfig.value.__viewerUnloadingPromise = new Promise((resolve, reject) => {\n      unloadingResolve = resolve\n    })\n\n    // If the component has subcomponents, you need to remove the subcomponents first. 如果该组件带有子组件，需要先移除子组件。\n    for (let i = 0; i < vcInstance.children.length; i++) {\n      const vcChildCmp = vcInstance.children[i].proxy as VcComponentPublicInstance\n      await vcChildCmp.unload()\n    }\n\n    vcInstance.children.length = 0\n\n    const { viewer, earth, map, dcViewer } = vcInstance\n    if (globalThis.Cesium) {\n      viewer.imageryLayers.layerAdded.removeEventListener(onImageryLayerAdded)\n      eventsState.registerEvents(false)\n    }\n\n    const { removeCesiumScript } = props\n\n    viewer._vcPickScreenSpaceEventHandler && viewer._vcPickScreenSpaceEventHandler.destroy()\n    viewer._vcViewerScreenSpaceEventHandler && viewer._vcViewerScreenSpaceEventHandler.destroy()\n    viewer._vcPickScreenSpaceEventHandler = undefined\n    viewer._vcViewerScreenSpaceEventHandler = undefined\n\n    removeCesiumScript && revokeExtensions(viewer)\n\n    delete vcInstance.appContext.config.globalProperties.$VueCesium[viewer.container.id]\n\n    if (globalThis.XE) {\n      earth && earth.destroy()\n    } else if (globalThis.mars3d) {\n      map && map.destroy()\n    } else if (globalThis.DC) {\n      dcViewer && dcViewer.destroy()\n    } else {\n      viewer && viewer.destroy()\n    }\n\n    vcInstance.viewer = undefined\n    vcInstance.mounted = false\n    if (removeCesiumScript && globalThis.Cesium) {\n      const scripts = document.getElementsByTagName('script')\n      const removeScripts: Array<HTMLScriptElement | HTMLLinkElement> = []\n      for (const script of scripts) {\n        script.src.indexOf('/Cesium.js') > -1 && removeScripts.push(script)\n        script.src.indexOf('/Workers/zlib.min.js') > -1 && removeScripts.push(script)\n        if (globalThis.XE) {\n          script.src.indexOf('/rxjs.umd.min.js') > -1 && removeScripts.push(script)\n          script.src.indexOf('/XbsjCesium.js') > -1 && removeScripts.push(script)\n          script.src.indexOf('/viewerCesiumNavigationMixin.js') > -1 && removeScripts.push(script)\n          script.src.indexOf('/XbsjEarth.js') > -1 && removeScripts.push(script)\n        }\n\n        loadLibs.includes(script.src) && !removeScripts.includes(script) && removeScripts.push(script)\n      }\n\n      const links = document.getElementsByTagName('link')\n      for (const link of links) {\n        link.href.includes('Widgets/widgets.css') && !removeScripts.includes(link) && removeScripts.push(link)\n        loadLibs.includes(link.href) && !removeScripts.includes(link) && removeScripts.push(link)\n      }\n      removeScripts.forEach(script => {\n        script.parentNode && script.parentNode.removeChild(script)\n      })\n      globalThis.Cesium && (globalThis.Cesium = undefined!)\n      globalThis.XbsjCesium && (globalThis.XbsjCesium = undefined)\n      globalThis.XbsjEarth && (globalThis.XbsjEarth = undefined)\n      globalThis.XE && (globalThis.XE = undefined)\n      globalThis.mars3d && (globalThis.mars3d = undefined)\n      globalThis.DC && (globalThis.DC = undefined)\n      globalThis.DcCore && (globalThis.DcCore = undefined)\n      globalConfig.value.__scriptPromise = undefined\n      loadLibs = []\n    }\n    // ensure custom events can be emitted after unmount. 不推荐\n    // https://github.com/vuejs/core/issues/5674\n    vcInstance.isUnmounted = false\n\n    const listener = getInstanceListener(vcInstance, 'destroyed')\n    listener && emit('destroyed', vcInstance)\n    vcMitt.emit('destroyed', vcInstance)\n    logger.debug('viewer---unloaded')\n    unloadingResolve(true)\n    globalConfig.value.__viewerUnloadingPromise = undefined\n    isReady.value = false\n    return true\n  }\n\n  const reload = function () {\n    return unload().then(() => {\n      return load()\n    })\n  }\n\n  /**\n   * 动态引入 CesiumJS\n   */\n  const getCesiumScript = async function (): Promise<typeof Cesium> {\n    logger.debug('getCesiumScript')\n    if (!globalThis.Cesium) {\n      const cesiumPath = props.cesiumPath ? props.cesiumPath : globalConfig.value.cesiumPath\n      const dirName = dirname(cesiumPath)\n      const mars3dConfig = globalConfig.value.mars3dConfig || props.mars3dConfig\n      const dcConfig = globalConfig.value.dcConfig || props.dcConfig\n      if (mars3dConfig) {\n        // 引入 mars3d\n        const libsConfig = mars3dConfig.libs || getDefaultMars3dConfig()\n        const include = mars3dConfig.include || 'mars3d'\n        const arrInclude = include.trim().split(',')\n        const keys = {}\n        for (let i = 0, len = arrInclude.length; i < len; i++) {\n          const key = arrInclude[i]\n          if (keys[key]) {\n            //规避重复引入lib\n            continue\n          }\n          keys[key] = true\n          loadLibs.push(...libsConfig[key])\n        }\n      } else if (dcConfig) {\n        loadLibs.push(cesiumPath)\n        loadLibs.push(cesiumPath.replace('dc.min.js', 'dc.min.css'))\n\n        loadLibs.push(dcConfig.Cesium)\n        const dirName = dirname(dcConfig.Cesium)\n        loadLibs.push(`${dirName}/Widgets/widgets.css`)\n\n        if (dcConfig.turf) {\n          loadLibs.push(dcConfig.turf)\n        }\n\n        if (dcConfig.echarts) {\n          loadLibs.push(dcConfig.echarts)\n        }\n      } else if (cesiumPath.includes('/dc.base.min.js')) {\n        loadLibs.push(cesiumPath)\n        loadLibs.push(cesiumPath.replace('/dc.base.min.js', '/dc.core.min.js'))\n        loadLibs.push(cesiumPath.replace('/dc.base.min.js', '/dc.core.min.js').replace('/dc.core.min.js', '/dc.core.min.css'))\n      } else if (cesiumPath.includes('/XbsjEarth.js')) {\n        loadLibs.push(cesiumPath)\n      } else {\n        loadLibs.push(cesiumPath)\n        loadLibs.push(`${dirName}/Widgets/widgets.css`)\n      }\n\n      const secondaryLibs = loadLibs\n      if (mars3dConfig || dcConfig) {\n        // mars3d 必须要等 Cesium 先初始化\n        const primaryLib = loadLibs.find(v => v.includes('Cesium.js'))\n        await loadScript(primaryLib)\n        secondaryLibs.splice(secondaryLibs.indexOf(primaryLib), 1)\n      }\n\n      const scriptLoadPromises: Array<Promise<unknown>> = []\n      secondaryLibs.forEach(url => {\n        const cssExpr = new RegExp('\\\\.css')\n        if (cssExpr.test(url)) {\n          scriptLoadPromises.push(loadLink(url))\n        } else {\n          scriptLoadPromises.push(loadScript(url))\n        }\n      })\n\n      return Promise.all(scriptLoadPromises).then(() => {\n        if (globalThis.Cesium) {\n          if (globalThis.DC) {\n            const config: any = {\n              ...dcConfig,\n              Cesium: globalThis.Cesium\n            }\n            if (dcConfig.echarts) {\n              config.echarts = globalThis.echarts\n            }\n\n            if (dcConfig.turf) {\n              config.turf = globalThis.turf\n            }\n\n            return globalThis.DC.ready(config).then(() => {\n              globalThis.Cesium = DC.getLib('Cesium')\n              const listener = getInstanceListener(vcInstance, 'cesiumReady')\n              listener && emit('cesiumReady', globalThis.DC)\n              return globalThis.Cesium\n            })\n          } else {\n            const listener = getInstanceListener(vcInstance, 'cesiumReady')\n            listener && emit('cesiumReady', globalThis.Cesium)\n            return globalThis.Cesium\n          }\n        } else if (globalThis.XE) {\n          // 兼容 cesiumlab earthsdk\n          return globalThis.XE.ready().then(() => {\n            // resolve(globalThis.Cesium)\n            const listener = getInstanceListener(vcInstance, 'cesiumReady')\n            listener && emit('cesiumReady', globalThis.Cesium)\n            return globalThis.Cesium\n          })\n        } else if (globalThis.DC) {\n          // 兼容  dc-sdk\n          if (compareCesiumVersion(globalThis.DC.VERSION, '3.0.0')) {\n            return globalThis.DC.ready({\n              ...dcConfig,\n              Cesium: globalThis.Cesium\n            }).then(() => {\n              globalThis.Cesium = DC.getLib('Cesium')\n              const listener = getInstanceListener(vcInstance, 'cesiumReady')\n              listener && emit('cesiumReady', globalThis.DC)\n              return globalThis.Cesium\n            })\n          } else {\n            globalThis.DC.use(globalThis.DcCore.default || globalThis.DcCore)\n            globalThis.DC.baseUrl = `${dirName}/resources/`\n            globalThis.DC.ready(() => {\n              globalThis.Cesium = DC.Namespace.Cesium\n\n              const listener = getInstanceListener(vcInstance, 'cesiumReady')\n              listener && emit('cesiumReady', globalThis.DC)\n              return globalThis.Cesium\n            })\n            return globalThis.Cesium\n          }\n        } else {\n          reject(new Error('VueCesium ERROR: ' + 'Error loading CesiumJS!'))\n        }\n      })\n    } else {\n      return Promise.resolve(globalThis.Cesium)\n    }\n  }\n\n  const loadScript = src => {\n    const $script = document.createElement('script')\n    $script.async = false\n    $script.src = src\n    document.body.appendChild($script)\n    return new Promise((resolve, reject) => {\n      $script.onload = () => {\n        resolve(true)\n      }\n    })\n  }\n\n  const loadLink = src => {\n    const $link = document.createElement('link')\n    $link.rel = 'stylesheet'\n    $link.href = src\n    document.head.appendChild($link)\n    return new Promise((resolve, reject) => {\n      $link.onload = () => {\n        resolve(true)\n      }\n    })\n  }\n\n  const onViewerWidgetResized = e => {\n    const { viewer } = vcInstance\n    const toolbarElement = viewer._toolbar as HTMLElement\n    if (\n      toolbarElement !== void 0 &&\n      getComputedStyle(toolbarElement).visibility !== 'hidden' &&\n      getComputedStyle(toolbarElement).display !== 'none'\n    ) {\n      layout.toolbarContainerRC = toolbarElement.getBoundingClientRect()\n    } else {\n      layout.toolbarContainerRC = undefined\n    }\n\n    const bottomContainer = viewer.bottomContainer as HTMLElement\n    if (\n      bottomContainer !== void 0 &&\n      getComputedStyle(bottomContainer).visibility !== 'hidden' &&\n      getComputedStyle(bottomContainer).display !== 'none'\n    ) {\n      layout.bottomContainerRC = bottomContainer.getBoundingClientRect()\n    } else {\n      layout.bottomContainerRC = undefined\n    }\n\n    const timelineContainer = viewer.timeline?.container as HTMLElement\n    if (\n      timelineContainer !== void 0 &&\n      getComputedStyle(timelineContainer).visibility !== 'hidden' &&\n      getComputedStyle(timelineContainer).display !== 'none'\n    ) {\n      layout.timelineContainerRC = timelineContainer.getBoundingClientRect()\n    } else {\n      layout.timelineContainerRC = undefined\n    }\n\n    const animationContainer = viewer.animation?.container as HTMLElement\n    if (\n      animationContainer !== void 0 &&\n      getComputedStyle(animationContainer).visibility !== 'hidden' &&\n      getComputedStyle(animationContainer).display !== 'none'\n    ) {\n      layout.animationContainerRC = animationContainer.getBoundingClientRect()\n    } else {\n      layout.animationContainerRC = undefined\n    }\n\n    viewer.resize()\n    const listener = getInstanceListener(vcInstance, 'viewerWidgetResized')\n    listener && emit('viewerWidgetResized', e)\n  }\n\n  /**\n   * 添加影像图层事件回调方法，在此维护影像图层相对顺序。\n   * @param layer 添加的图层。\n   */\n  const onImageryLayerAdded = (layer: Cesium.ImageryLayer) => {\n    const viewer = vcInstance.viewer as Cesium.Viewer\n    const { autoSortImageryLayers } = props\n\n    if (viewer.baseLayerPicker) {\n      viewer.imageryLayers.raiseToTop(layer)\n    }\n    const { defined } = Cesium\n    if (autoSortImageryLayers) {\n      layer.sortOrder = defined(layer.sortOrder) ? layer.sortOrder : 9999\n      viewer.imageryLayers._layers.sort((a: Cesium.ImageryLayer, b: Cesium.ImageryLayer) => a.sortOrder! - b.sortOrder!)\n      viewer.imageryLayers._update()\n    }\n  }\n  /**\n   * 本地日期和时间格式化函数。\n   * @param date\n   * @param viewModel\n   * @param ignoredate\n   */\n  const localeDateTimeFormatter = function (date: Cesium.JulianDate, viewModel?: Cesium.AnimationViewModel, ignoredate?: boolean): string {\n    const { JulianDate } = Cesium\n    let TZCode\n\n    if (props.UTCOffset) {\n      date = JulianDate.addMinutes(date, props.UTCOffset, new JulianDate())\n      const offset = new Date().getTimezoneOffset() - props.UTCOffset\n      TZCode = offset === 0 ? 'UTC' : 'UTC' + '+' + -(offset / 60)\n    } else {\n      TZCode = new Date().getTimezoneOffset() === 0 ? 'UTC' : 'UTC' + '+' + -(new Date().getTimezoneOffset() / 60)\n    }\n    const jsDate = JulianDate.toDate(date)\n    const timeString: string = jsDate\n      .toLocaleString(t('name'), {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n        hour12: false\n      })\n      .replace(/,/g, '')\n    const dateString: string = jsDate\n      .toLocaleString(t('name'), {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      })\n      .replace(/,/g, '')\n\n    if (!ignoredate && (viewModel || jsDate.getHours() + jsDate.getMinutes() === 0)) {\n      return dateString\n    }\n\n    props.TZCode && (TZCode = props.TZCode)\n    return ignoredate ? `${timeString} ${TZCode}` : `${dateString} ${timeString} ${TZCode}`\n  }\n\n  /**\n   * 本地时间格式化函数。\n   * @param time\n   * @param viewModel\n   */\n  const localeTimeFormatter = function (time: Cesium.JulianDate, viewModel: Cesium.AnimationViewModel): string {\n    return localeDateTimeFormatter(time, viewModel, true)\n  }\n\n  const onTimelineScrubfunction = function (e) {\n    const clock = e.clock\n    clock.currentTime = e.timeJulian\n    clock.shouldAnimate = false\n  }\n\n  const enableVRUI = function (viewer, enabled) {\n    const geocoder = viewer._geocoder\n    const homeButton = viewer._homeButton\n    const sceneModePicker = viewer._sceneModePicker\n    const projectionPicker = viewer._projectionPicker\n    const baseLayerPicker = viewer._baseLayerPicker\n    const animation = viewer._animation\n    const timeline = viewer._timeline\n    const fullscreenButton = viewer._fullscreenButton\n    const infoBox = viewer._infoBox\n    const selectionIndicator = viewer._selectionIndicator\n    const visibility = enabled ? 'hidden' : 'visible'\n    const { defined } = Cesium\n    if (defined(geocoder)) {\n      geocoder.container.style.visibility = visibility\n    }\n    if (defined(homeButton)) {\n      homeButton.container.style.visibility = visibility\n    }\n    if (defined(sceneModePicker)) {\n      sceneModePicker.container.style.visibility = visibility\n    }\n    if (defined(projectionPicker)) {\n      projectionPicker.container.style.visibility = visibility\n    }\n    if (defined(baseLayerPicker)) {\n      baseLayerPicker.container.style.visibility = visibility\n    }\n    if (defined(animation)) {\n      animation.container.style.visibility = visibility\n    }\n    if (defined(timeline)) {\n      timeline.container.style.visibility = visibility\n    }\n    if (defined(fullscreenButton) && fullscreenButton.viewModel.isFullscreenEnabled) {\n      fullscreenButton.container.style.visibility = visibility\n    }\n    if (defined(infoBox)) {\n      infoBox.container.style.visibility = visibility\n    }\n    if (defined(selectionIndicator)) {\n      selectionIndicator.container.style.visibility = visibility\n    }\n    if (viewer._container) {\n      const right = enabled || !defined(fullscreenButton) ? 0 : fullscreenButton.container.clientWidth\n      viewer._vrButton.container.style.right = right + 'px'\n      viewer.forceResize()\n    }\n  }\n\n  const resizeToolbar = function (parent, child) {\n    Array.prototype.slice.call(parent.children).forEach(element => {\n      switch (element.className) {\n        case 'cesium-viewer-geocoderContainer':\n          element.customIndex = 1\n          break\n        case 'cesium-button cesium-toolbar-button cesium-home-button':\n          element.customIndex = 2\n          break\n        case 'cesium-sceneModePicker-wrapper cesium-toolbar-button':\n          element.customIndex = 3\n          break\n        case 'cesium-projectionPicker-wrapper cesium-toolbar-button':\n          element.customIndex = 4\n          break\n        case 'cesium-button cesium-toolbar-button':\n        case 'cesium-baseLayerPicker-dropDown':\n          element.customIndex = 5\n          break\n        case 'cesium-navigationHelpButton-wrapper':\n          element.customIndex = 6\n          break\n      }\n    })\n    const arr: any[] = []\n    Array.prototype.slice.call(parent.children).forEach(element => {\n      arr.push(element)\n    })\n    arr.sort(function (a, b) {\n      return a.customIndex - b.customIndex\n    })\n    for (let i = 0; i < arr.length; i++) {\n      parent.appendChild(arr[i])\n    }\n  }\n\n  const getServices = function (): VcViewerProvider {\n    return mergeDescriptors(\n      {},\n      {\n        get layout() {\n          return layout\n        },\n        get vm() {\n          return vcInstance\n        },\n        get Cesium() {\n          return vcInstance.Cesium\n        },\n        get viewer(): Cesium.Viewer {\n          return vcInstance.viewer\n        },\n        get dataSources(): Cesium.DataSourceCollection {\n          return vcInstance.viewer?.dataSources\n        },\n        get entities() {\n          return vcInstance.viewer?.entities\n        },\n        get imageryLayers() {\n          return vcInstance.viewer?.imageryLayers\n        },\n        get primitives() {\n          return vcInstance.viewer?.scene.primitives\n        },\n        get groundPrimitives() {\n          return vcInstance.viewer?.scene.groundPrimitives\n        },\n        get postProcessStages() {\n          return vcInstance.viewer?.postProcessStages\n        },\n        get creatingPromise() {\n          return creatingPromise\n        },\n        /**\n         * for mars3d only\n         */\n        get mars3dMap() {\n          return vcInstance.map\n        },\n        /**\n         * for dc-sdk only\n         */\n        get dcViewer() {\n          return vcInstance.dcViewer\n        },\n        /**\n         * for earth-sdk only\n         */\n        get earth() {\n          return vcInstance.earth\n        }\n      }\n    )\n  }\n\n  Object.defineProperties(vcInstance, {\n    cesiumObject: {\n      enumerable: true,\n      get: () => vcInstance.viewer\n    }\n  })\n\n  // lifecycle\n  onMounted(async () => {\n    try {\n      logger.debug('viewer - onMounted')\n      await globalConfig.value?.__viewerUnloadingPromise\n      load()\n        .then(e => {\n          createResolve(e)\n        })\n        .catch(e => {\n          emit('unready', e)\n          reject(e)\n        })\n    } catch (e) {\n      emit('unready', e)\n      reject(e)\n    }\n  })\n\n  onUnmounted(() => {\n    logger.debug('viewer - onUnmounted')\n    unload().then(() => {\n      vcMitt.all.clear()\n    })\n  })\n\n  return {\n    isReady,\n    load,\n    unload,\n    reload,\n    getServices,\n    viewerRef,\n    creatingPromise\n  }\n}\n\nexport interface VcViewerProps {\n  /**\n   * If set to false, the Animation widget will not be created.\n   * Default value: false\n   */\n  animation?: boolean\n  /**\n   * If set to false, the BaseLayerPicker widget will not be created.\n   * Default value: false\n   */\n  baseLayerPicker?: boolean\n  /**\n   * \tIf set to false, the FullscreenButton widget will not be created.\n   * Default value: false\n   */\n  fullscreenButton?: boolean\n  /**\n   * If set to true, the VRButton widget will be created.\n   * Default value: false\n   */\n  vrButton?: boolean\n  /**\n   * If set to false, the Geocoder widget will not be created.\n   * Default value: false\n   */\n  geocoder?: boolean | Array<Cesium.GeocoderService>\n  /**\n   * If set to false, the HomeButton widget will not be created.\n   * Default value: false\n   */\n  homeButton?: boolean\n  /**\n   * If set to false, the InfoBox widget will not be created.\n   * Default value: false\n   */\n  infoBox?: boolean\n  /**\n   * If set to false, the SceneModePicker widget will not be created.\n   * Default value: false\n   */\n  sceneModePicker?: boolean\n  /**\n   * If set to false, the SelectionIndicator widget will not be created.\n   * Default value: false\n   */\n  selectionIndicator?: boolean\n  /**\n   * If set to false, the Timeline widget will not be created.\n   * Default value: false\n   */\n  timeline?: boolean\n  /**\n   * If set to false, the navigation help button will not be created.\n   * Default value: false\n   */\n  navigationHelpButton?: boolean\n  /**\n   * True if the navigation instructions should initially be visible, or false if the should not be shown until the user explicitly clicks the button.\n   * Default value: false\n   */\n  navigationInstructionsInitiallyVisible?: boolean\n  /**\n   * When true, each geometry instance will only be rendered in 3D to save GPU memory.\n   * Default value: false\n   */\n  scene3DOnly?: boolean\n  /**\n   * true if the clock should attempt to advance simulation time by default, false otherwise. This option takes precedence over setting clockViewModel.\n   * Default value: false\n   */\n  shouldAnimate?: boolean\n  /**\n   * The clock view model to use to control current time.\n   */\n  clockViewModel?: Cesium.ClockViewModel\n  /**\n   * The view model for the current base imagery layer, if not supplied the first available base layer is used. This value is only valid if `baseLayerPicker` is set to true.\n   */\n  selectedImageryProviderViewModel?: Cesium.ProviderViewModel\n  /**\n   * The array of ProviderViewModels to be selectable from the BaseLayerPicker. This value is only valid if `baseLayerPicker` is set to true.\n   */\n  imageryProviderViewModels?: Array<Cesium.ProviderViewModel>\n  /**\n   * The view model for the current base terrain layer, if not supplied the first available base layer is used. This value is only valid if `baseLayerPicker` is set to true.\n   */\n  selectedTerrainProviderViewModel?: Cesium.ProviderViewModel\n  /**\n   * The array of ProviderViewModels to be selectable from the BaseLayerPicker. This value is only valid if `baseLayerPicker` is set to true.\n   */\n  terrainProviderViewModels?: Array<Cesium.ProviderViewModel>\n  /**\n   * The imagery provider to use. This value is only valid if `baseLayerPicker` is set to false.\n   */\n  imageryProvider?: Cesium.ImageryProvider\n  /**\n   * The bottommost imagery layer applied to the globe. If set to false, no imagery provider will be added. This value is only valid if `baseLayerPicker` is set to false.\n   */\n  baseLayer?: Cesium.ImageryLayer | false\n  /**\n   * The terrain provider to use\n   */\n  terrainProvider?: Cesium.TerrainProvider\n  /**\n   * The skybox used to render the stars. When undefined, the default stars are used. If set to false, no skyBox, Sun, or Moon will be added.\n   * Default value: undefined\n   */\n  skyBox?: Cesium.SkyBox | false\n  /**\n   * Blue sky, and the glow around the Earth's limb. Set to false to turn it off.\n   */\n  skyAtmosphere?: Cesium.SkyAtmosphere | false\n  /**\n   * The element or id to be placed into fullscreen mode when the full screen button is pressed.\n   */\n  fullscreenElement?: string | Element\n  /**\n   * True if this widget should control the render loop, false otherwise.\n   * Default value: true\n   */\n  useDefaultRenderLoop?: boolean\n  /**\n   * The target frame rate when using the default render loop.\n   */\n  targetFrameRate?: number\n  /**\n   * If true, this widget will automatically display an HTML panel to the user containing the error, if a render loop error occurs.\n   * Default value: true\n   */\n  showRenderLoopErrors?: boolean\n  /**\n   * If true, render at the browser's recommended resolution and ignore window.devicePixelRatio.\n   * Default value: true\n   */\n  useBrowserRecommendedResolution?: boolean\n  /**\n   * If true, this widget will automatically track the clock settings of newly added DataSources, updating if the DataSource's clock changes. Set this to false if you want to configure the clock independently.\n   * Default value: true\n   */\n  automaticallyTrackDataSourceClocks?: boolean\n  /**\n   * Context and WebGL creation properties corresponding to options passed to Scene.\n   */\n  contextOptions?: VcContextOptions\n  /**\n   * The initial scene mode.\n   * Default value: 3\n   */\n  sceneMode?: Cesium.SceneMode\n  /**\n   * The map projection to use in 2D and Columbus View modes.\n   */\n  mapProjection?: Cesium.MapProjection\n  /**\n   * The globe to use in the scene. If set to false, no globe will be added.\n   */\n  globe?: Cesium.Globe | false\n  /**\n   * If true and the configuration supports it, use order independent translucency.\n   * Default value: true\n   */\n  orderIndependentTranslucency?: boolean\n  /**\n   * The DOM element or ID that will contain the CreditDisplay. If not specified, the credits are added to the bottom of the widget itself.\n   */\n  creditContainer?: string | Element\n  /**\n   * The DOM element or ID that will contain the credit pop up created by the CreditDisplay. If not specified, it will appear over the widget itself.\n   */\n  creditViewport?: string | Element\n  /**\n   * The collection of data sources visualized by the widget. If this parameter is provided, the instance is assumed to be owned by the caller and will not be destroyed when the viewer is destroyed.\n   */\n  dataSources?: Cesium.DataSourceCollection\n  /**\n   * A scalar used to exaggerate the terrain. Defaults to 1.0 (no exaggeration). A value of 2.0 scales the terrain by 2x. A value of 0.0 makes the terrain completely flat. Note that terrain exaggeration will not modify any other primitive as they are positioned relative to the ellipsoid.\n   * Default value: 1.0\n   */\n  terrainExaggeration?: number\n  /**\n   * Determines if shadows are cast by light sources.\n   * Default value: false\n   */\n  shadows?: boolean\n  /**\n   * Determines if the terrain casts or receives shadows from light sources.\n   * Default value: 3\n   */\n  terrainShadows?: Cesium.ShadowMode\n  /**\n   * Determines if the 2D map is rotatable or can be scrolled infinitely in the horizontal direction.\n   * Default value: 1\n   */\n  mapMode2D?: Cesium.MapMode2D\n  /**\n   * If set to true, the ProjectionPicker widget will be created.\n   * Default value: false\n   */\n  projectionPicker?: boolean\n  /**\n   * If true, rendering a frame will only occur when needed as determined by changes within the scene. Enabling reduces the CPU/GPU usage of your application and uses less battery on mobile, but requires using Scene#requestRender to render a new frame explicitly in this mode. This will be necessary in many cases after making changes to the scene in other parts of the API. See Improving Performance with Explicit Rendering.\n   * Default value: false\n   */\n  requestRenderMode?: boolean\n  /**\n   * If requestRenderMode is true, this value defines the maximum change in simulation time allowed before a render is requested. See Improving Performance with Explicit Rendering.\n   * Default value: 0.0\n   */\n  maximumRenderTimeChange?: number\n  /**\n   * Specify the web service address of the CesiumJS library used to initialize the `vc-viewer` component.\n   */\n  cesiumPath?: string\n  /**\n   * Specify the default [Cesium ion](https://cesium.com/ion/) access token.\n   */\n  accessToken?: string\n  /**\n   * Specify the viewer camera\n   */\n  camera?: VcCamera\n  /**\n   * Specify whether to display the default Logo and loading data copyright information.\n   * Default value: true\n   */\n  showCredit?: boolean\n  /**\n   * Specify whether to display frames per second and time between frames.This property is for debugging only; it is not for production use.\n   * Default value: false\n   */\n  debugShowFramesPerSecond?: boolean\n  /**\n   * Specify whether to display navigation control. for supermap webgl iclient only.\n   * Default value: false\n   */\n  navigation?: boolean\n  /**\n   * The time zone code used for timeline date formatting. By default, it is formatted as local time. If you want to display it as UTC universal time, set `UTCoffset` to `new Date().getTimezoneOffset()`\n   */\n  TZCode?: string\n  /**\n   * The time difference (minutes) between local time and UTC time.\n   */\n  UTCOffset?: number\n  /**\n   * Specify whether to remove the CesiumJS script tag when `vc-viewer` is destroyed.\n   * Default value: true\n   */\n  removeCesiumScript?: boolean\n  /**\n   * Specify whether to automatically sort imageLayers according to the layer's `sortOrder` property when adding imagelayer.\n   * Default value: true\n   */\n  autoSortImageryLayers?: boolean\n  /**\n   * Specifiy whether to trigger mouse events.\n   * Default value: true\n   */\n  enableMouseEvent?: boolean\n  /**\n   * Specify whether to show the skeleton background during `vc-viewer` initialization.\n   * Default value: true\n   */\n  skeleton?: boolean | VcSkeletonProps\n  /**\n   * x:y:z, where x is the amount of time to wait (in milliseconds), y is the touch event sensitivity (in pixels) and z is the mouse event sensitivity (in pixels).\n   * Default value: 1000\n   */\n  touchHoldArg?: string\n  /**\n   * for mars3d only.\n   */\n  mars3dConfig?: Mars3dConfig\n  /**\n   * for dc-sdk 3.0+ only.\n   */\n  dcConfig?: DCConfig\n  /**\n   * Specifies the container id of the viewer.\n   */\n  containerId?: string\n  /**\n   * Specify the initialization method of the viewer when loading non-standard third-party Cesium libraries.\n   */\n  viewerCreator?: VcViewerCreatorFunction\n  /**\n   * Triggers before the VcViewer is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcViewer is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the component load failed.\n   */\n  onUnready?: (e: any) => void\n  /**\n   * Triggers when the VcViewer is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when CesiumJS is successfully loaded.\n   */\n  onCesiumReady?: (payload: typeof Cesium) => void\n  /**\n   * Triggers when a component changes on vc-viewer.\n   */\n  onViewerWidgetResized?: (payload: ViewerWidgetResizedEvent) => void\n  /**\n   * Triggers when the selected entity changes.\n   */\n  onSelectedEntityChanged?: (entity: Cesium.Entity) => void\n  /**\n   * Triggers when the tracked entity changes.\n   */\n  onTrackedEntityChanged?: (entity: Cesium.Entity) => void\n  /**\n   * Triggers when a layer is added to the collection. Event handlers are passed the layer that was added and the index at which it was added.\n   */\n  onLayerAdded?: (imageryLayer: Cesium.ImageryLayer, index: number) => void\n  /**\n   * Triggers when a layer changes position in the collection. Event handlers are passed the layer that was moved, its new index after the move, and its old index prior to the move.\n   */\n  onLayerMoved?: (imageryLayer: Cesium.ImageryLayer, newIndex: number, oldIndex: number) => void\n  /**\n   * Triggers when a layer is removed from the collection. Event handlers are passed the layer that was removed and the index from which it was removed.\n   */\n  onLayerRemoved?: (imageryLayer: Cesium.ImageryLayer, index: number) => void\n  /**\n   * Triggers when a layer is shown or hidden by setting the ImageryLayer#show property. Event handlers are passed a reference to this layer, the index of the layer in the collection, and a flag that is true if the layer is now shown or false if it is now hidden.\n   */\n  onLayerShownOrHidden?: (imageryLayer: Cesium.ImageryLayer, index: number, show: boolean) => void\n  /**\n   * Triggers when a data source is added to the collection. Event handlers are passed the data source that was added.\n   */\n  onDataSourceAdded?: (collection: Cesium.DataSourceCollection, dataSource: VcDatasource) => void\n  /**\n   * Triggers when a data source changes position in the collection. Event handlers are passed the data source that was moved, its new index after the move, and its old index prior to the move.\n   */\n  onDataSourceMoved?: (dataSource: VcDatasource, newIndex: number, oldIndex: number) => void\n  /**\n   * Triggers when a data source is removed from the collection. Event handlers are passed the data source that was removed.\n   */\n  onDataSourceRemoved?: (collection: Cesium.DataSourceCollection, dataSource: VcDatasource) => void\n  /**\n   * Triggers when when entities are added or removed from the collection. The generated event is a EntityCollection.collectionChangedEventCallback.\n   */\n  onCollectionChanged?: (\n    collection: Cesium.EntityCollection,\n    addedArray: Array<Cesium.Entity>,\n    removedArray: Array<Cesium.Entity>,\n    changedArray: Array<Cesium.Entity>\n  ) => void\n  /**\n   * Triggers at the completion of a scene transition.\n   */\n  onMorphComplete?: (transitioner: any, preceneModeMode: Cesium.SceneMode, sceneMode: Cesium.SceneMode, wasMorphing: boolean) => void\n  /**\n   * Triggers at the beginning of a scene transition.\n   */\n  onMorphStart?: (transitioner: any, preceneModeMode: Cesium.SceneMode, sceneMode: Cesium.SceneMode, wasMorphing: boolean) => void\n  /**\n   * Triggers immediately after the scene is rendered. Subscribers to the event receive the Scene instance as the first parameter and the current time as the second parameter.\n   */\n  onPostRender?: (scene: Cesium.Scene, time: Cesium.JulianDate) => void\n  /**\n   * Triggers after the scene is updated and immediately before the scene is rendered. Subscribers to the event receive the Scene instance as the first parameter and the current time as the second parameter.\n   */\n  onPreRender?: (scene: Cesium.Scene, time: Cesium.JulianDate) => void\n  /**\n   * Triggers immediately after the scene is updated and before the scene is rendered. Subscribers to the event receive the Scene instance as the first parameter and the current time as the second parameter.\n   */\n  onPostUpdate?: (scene: Cesium.Scene, time: Cesium.JulianDate) => void\n  /**\n   * Triggers before the scene is updated or rendered. Subscribers to the event receive the Scene instance as the first parameter and the current time as the second parameter.\n   */\n  onPreUpdate?: (scene: Cesium.Scene, time: Cesium.JulianDate) => void\n  /**\n   * Triggers when an error is thrown inside the render function. The Scene instance and the thrown error are the only two parameters passed to the event handler. By default, errors are not rethrown after this event is raised, but that can be changed by setting the rethrowRenderErrors property.\n   */\n  onRenderError?: (scene: Cesium.Scene, error: any) => void\n  /**\n   * Triggers when the terrain provider is changed.\n   */\n  onTerrainProviderChanged?: (provider: VcTerrainProvider) => void\n  /**\n   * Triggers when the camera has changed by percentageChanged.\n   */\n  onChanged?: (percent: number) => void\n  /**\n   * Triggers when the camera has stopped moving.\n   */\n  onMoveEnd?: () => void\n  /**\n   * Triggers when the camera starts to move.\n   */\n  onMoveStart?: () => void\n  /**\n   * Triggers when Clock#stopTime is reached.\n   */\n  onOnStop?: (clock: Cesium.Clock) => void\n  /**\n   * Triggers when Clock#tick is called.\n   */\n  onOnTick?: (clock: Cesium.Clock) => void\n  /**\n   * Triggers when the terrain provider encounters an asynchronous error. By subscribing to the event, you will be notified of the error and can potentially recover from it. Event listeners are passed an instance of TileProviderError.\n   */\n  onErrorEvent?: (tileProviderError: any) => void\n  /**\n   * Triggers when the user clicks the camera icon.\n   */\n  onCameraClicked?: (viewModel: Cesium.InfoBoxViewModel) => void\n  /**\n   * Triggers when the user closes the info box.\n   */\n  onCloseClicked?: (viewModel: Cesium.InfoBoxViewModel) => void\n  /**\n   * Triggers when the mouse left button clicked.\n   */\n  onLeftClick?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggered when the mouse left button double clicked.\n   */\n  onLeftDoubleClick?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggered when the mouse left button down.\n   */\n  onLeftDown?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggered when the mouse left button up.\n   */\n  onLeftUp?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggers when the mouse middle button clicked.\n   */\n  onMiddleClick?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggers when the mouse middle button down.\n   */\n  onMiddleDown?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggers when the mouse middle button up.\n   */\n  onMiddleUp?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggers when the mouse move.\n   */\n  onMouseMove?: (mouseClickEvent: { startPosition: Cesium.Cartesian2; endPosition: Cesium.Cartesian2 }) => void\n  /**\n   * Triggers when the start of a two-finger on a touch surface.\n   */\n  onPinchStart?: (touch2StartEvent: { position1: Cesium.Cartesian2; position2: Cesium.Cartesian2 }) => void\n  /**\n   * Triggers when a change of a two-finger on a touch surface.\n   */\n  onPinchMove?: (touchPinchMovementEvent: {\n    distance: {\n      startPosition: Cesium.Cartesian2\n      endPosition: Cesium.Cartesian2\n    }\n    angleAndHeight: {\n      startPosition: Cesium.Cartesian2\n      endPosition: Cesium.Cartesian2\n    }\n  }) => void\n  /**\n   * Triggers when end of a two-finger on a touch surface.\n   */\n  onPinchEnd?: () => void\n  /**\n   * Triggers when the mouse right click.\n   */\n  onRightClick?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggers when the mouse right button down.\n   */\n  onRightDown?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggers when the mouse right button up.\n   */\n  onRightUp?: (mouseClickEvent: { position: Cesium.Cartesian2 }) => void\n  /**\n   * Triggers when the mouse wheel.\n   */\n  onWheel?: (delta: number) => void\n  /**\n   * Triggers when an imagery layer is added, shown, hidden, moved, or removed.\n   */\n  onImageryLayersUpdatedEvent?: () => void\n  /**\n   * \tTriggers when the length of the tile load queue has changed since the last render frame. When the load queue is empty, all terrain and imagery for the current view have been loaded. The event passes the new length of the tile load queue.\n   */\n  onTileLoadProgressEvent?: (length: number) => void\n  onTouchEnd?: (evt: any) => void\n  /**\n   *  Triggers when the camera has changed by percentageChanged.\n   */\n  'onUpdate:camera'?: (evt: VcCamera) => void\n}\n\nexport interface VcViewerSlots {\n  /**\n   * Default slot content of the component\n   */\n  default: () => VNode[]\n}\n\nexport type VcViewerRef = VcComponentPublicInstance<VcViewerProps>\n\nexport type VcViewerCreatorFunction<T = Cesium.Viewer> = (instance: VcComponentInternalInstance, el: HTMLElement, options: VcViewerProps) => T\n"],"names":["defaultProps","ref","mitt","useGlobalConfig","useLog","useEvents","reactive","useLocale","useVcExtension","watch","compareCesiumVersion","setViewerCamera","getInstanceListener","isEmptyObj","$","hasOwn","nextTick","reject","dirname","getDefaultMars3dConfig","dirName","mergeDescriptors","onMounted","onUnmounted"],"mappings":"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"}